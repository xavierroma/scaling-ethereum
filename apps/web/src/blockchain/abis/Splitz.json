{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owes",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Registry.CreateReceiptLine[]",
          "name": "lines",
          "type": "tuple[]"
        }
      ],
      "name": "addReceipt",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "",
          "type": "uint56"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "paid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Registry.ReceiptLine[]",
              "name": "lines",
              "type": "tuple[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Registry.Receipt",
          "name": "receipt",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getReceiptsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "paid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Registry.ReceiptLine[]",
              "name": "lines",
              "type": "tuple[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Registry.Receipt[]",
          "name": "receipts",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        },
        {
          "internalType": "bool",
          "name": "paid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owes",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "",
          "type": "uint56"
        }
      ],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ledgerStartPosition",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "receiptId",
          "type": "uint56"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct Splitz.Permit",
          "name": "permit",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Splitz.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "payReceipt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPermit",
      "outputs": [
        {
          "internalType": "contract IERC20Permit",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526002805466ffffffffffffff1916905534801561002057600080fd5b5060405161175038038061175083398101604081905261003f91610083565b60028054600160381b600160d81b0319166701000000000000006001600160a01b0393909316928302179055600380546001600160a01b03191690911790556100b3565b60006020828403121561009557600080fd5b81516001600160a01b03811681146100ac57600080fd5b9392505050565b61168e806100c26000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063788e28051161005b578063788e280514610146578063cc937a6714610166578063d068ce8a14610186578063fc0c546a146101b157600080fd5b80630a8b2a001461008d57806310a7fd7b146100bd57806319e2883e1461010e5780634534d95b14610131575b600080fd5b6100a061009b3660046110e4565b6101cb565b60405166ffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046111a1565b61049f565b6040805166ffffffffffffff909616865293151560208601526001600160a01b0392831693850193909352166060830152608082015260a0016100b4565b61012161011c3660046111d6565b6104fb565b6040516100b4949392919061123e565b61014461013f366004611276565b6105b8565b005b6101596101543660046112ff565b61073c565b6040516100b491906113e5565b6101796101743660046111d6565b610982565b6040516100b49190611447565b600354610199906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b60025461019990600160381b90046001600160a01b031681565b6000816102135760405162461bcd60e51b8152602060048201526011602482015270139bc81b1a5b995cc81c1c9bdd9a591959607a1b60448201526064015b60405180910390fd5b60008451116102645760405162461bcd60e51b815260206004820152601760248201527f4e6f206465736372697074696f6e2070726f7669646564000000000000000000604482015260640161020a565b60015460005b838110156103dc576040805160a0810190915260025466ffffffffffffff16815260019060208101338888868181106102a5576102a561145a565b6102bb92602060409092020190810191506112ff565b6001600160a01b03161481523360208201526040018787858181106102e2576102e261145a565b6102f892602060409092020190810191506112ff565b6001600160a01b031681526020018787858181106103185761031861145a565b6040908102929092016020908101359093525083546001808201865560009586529483902084516003909202018054938501519285015166ffffffffffffff90921667ffffffffffffffff1990941693909317600160381b921515929092029190911768010000000000000000600160e01b031916600160401b6001600160a01b0392831602178255606083015193820180546001600160a01b031916949091169390931790925560800151600290910155806103d481611486565b91505061026a565b50604080516080810182526002805466ffffffffffffff908116808452426020808601918252858701888152606087018d8152600094855291849052969092208551815466ffffffffffffff19169416939093178355516001830155935191810191909155915190919060038201906104559082611524565b50506002805466ffffffffffffff1691506000610471836115e4565b91906101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055509150509392505050565b600181815481106104af57600080fd5b600091825260209091206003909102018054600182015460029092015466ffffffffffffff8216935060ff600160381b830416926001600160a01b03600160401b909304831692169085565b600060208190529081526040902080546001820154600283015460038401805466ffffffffffffff9094169492939192916105359061149f565b80601f01602080910402602001604051908101604052809291908181526020018280546105619061149f565b80156105ae5780601f10610583576101008083540402835291602001916105ae565b820191906000526020600020905b81548152906001019060200180831161059157829003601f168201915b5050505050905084565b6000806105c485610d74565b91509150600082116106185760405162461bcd60e51b815260206004820152601860248201527f53706c69747a3a206e6f20616d6f756e7420746f207061790000000000000000604482015260640161020a565b60035483516020850151604080870151905163d505accf60e01b8152336004820152306024820152604481018790526080890135606482015260ff909316608484015260a483019190915260c48201526001600160a01b039091169063d505accf9060e401600060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b50506002546040516323b872dd60e01b81523360048201526001600160a01b03858116602483015260448201879052600160381b90920490911692506323b872dd91506064016020604051808303816000875af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610734919061160a565b505050505050565b60606000805b60025466ffffffffffffff1681101561081557600061076082610982565b9050846001600160a01b031681602001516001600160a01b031603610792578261078981611486565b93505050610803565b60005b81608001515181101561080057856001600160a01b0316826080015182815181106107c2576107c261145a565b6020026020010151600001516001600160a01b0316036107ee57836107e681611486565b945050610800565b806107f881611486565b915050610795565b50505b8061080d81611486565b915050610742565b508067ffffffffffffffff81111561082f5761082f611028565b60405190808252806020026020018201604052801561086857816020015b610855610fe0565b81526020019060019003908161084d5790505b5091506000805b60025466ffffffffffffff1681101561097a57600061088d82610982565b9050856001600160a01b031681602001516001600160a01b0316036108db578085846108b881611486565b9550815181106108ca576108ca61145a565b602002602001018190525050610968565b60005b81608001515181101561096557866001600160a01b03168260800151828151811061090b5761090b61145a565b6020026020010151600001516001600160a01b0316036109535781868561093181611486565b9650815181106109435761094361145a565b6020026020010181905250610965565b8061095d81611486565b9150506108de565b50505b8061097281611486565b91505061086f565b505050919050565b61098a610fe0565b60025466ffffffffffffff908116908316106109da5760405162461bcd60e51b815260206004820152600f60248201526e1a59081a5cc81b9bdd081d985b1a59608a1b604482015260640161020a565b66ffffffffffffff808316600090815260208181526040808320815160808101835281549095168552600181015492850192909252600282015490840152600381018054929392606084019190610a309061149f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5c9061149f565b8015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b5050505050815250509050600080826040015190505b600154811015610b25578466ffffffffffffff1660018281548110610ae657610ae661145a565b600091825260209091206003909102015466ffffffffffffff1603610b135781610b0f81611486565b9250505b80610b1d81611486565b915050610abf565b506040518060c00160405280836000015166ffffffffffffff1681526020016001846040015181548110610b5b57610b5b61145a565b600091825260208083206003909202909101546001600160a01b03600160401b909104168352858101519083015260408201526060018267ffffffffffffffff811115610baa57610baa611028565b604051908082528060200260200182016040528015610bf557816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610bc85790505b508152606084015160209091015260408301519093505b60015481101561097a578466ffffffffffffff1660018281548110610c3357610c3361145a565b600091825260209091206003909102015466ffffffffffffff160361097a576000836040015182610c64919061162c565b9050604051806060016040528060018481548110610c8457610c8461145a565b600091825260209182902060016003909202018101546001600160a01b031683528054929091019185908110610cbc57610cbc61145a565b906000526020600020906003020160020154815260200160018481548110610ce657610ce661145a565b6000918252602090912060039091020154600160381b900460ff16151590526080860151805183908110610d1c57610d1c61145a565b602002602001018190525060018281548110610d3a57610d3a61145a565b90600052602060002090600302016002015485606001818151610d5d9190611645565b905250819050610d6c81611486565b915050610c0c565b66ffffffffffffff80821660009081526020818152604080832081516080810183528154909516855260018101549285019290925260028201549084015260038101805492938493849391926060840191610dce9061149f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfa9061149f565b8015610e475780601f10610e1c57610100808354040283529160200191610e47565b820191906000526020600020905b815481529060010190602001808311610e2a57829003601f168201915b5050505050815250509050600092506001816040015181548110610e6d57610e6d61145a565b60009182526020909120600390910201546040820151600160401b9091046001600160a01b031692505b600154811015610fd9578466ffffffffffffff1660018281548110610ebe57610ebe61145a565b600091825260209091206003909102015466ffffffffffffff1603610fd957336001600160a01b031660018281548110610efa57610efa61145a565b60009182526020909120600160039092020101546001600160a01b0316141580610f4e575060018181548110610f3257610f3261145a565b6000918252602090912060039091020154600160381b900460ff165b610fc75760018181548110610f6557610f6561145a565b90600052602060002090600302016002015484610f829190611645565b93506001808281548110610f9857610f9861145a565b600091825260209091206003909102018054911515600160381b0267ff00000000000000199092169190911790555b80610fd181611486565b915050610e97565b5050915091565b6040518060c00160405280600066ffffffffffffff16815260200160006001600160a01b03168152602001600081526020016000815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561106157611061611028565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561109057611090611028565b604052919050565b60008083601f8401126110aa57600080fd5b50813567ffffffffffffffff8111156110c257600080fd5b6020830191508360208260061b85010111156110dd57600080fd5b9250929050565b6000806000604084860312156110f957600080fd5b833567ffffffffffffffff8082111561111157600080fd5b818601915086601f83011261112557600080fd5b813560208282111561113957611139611028565b61114b601f8301601f19168201611067565b828152898284870101111561115f57600080fd5b8282860183830137600092810182019290925290955086013591508082111561118757600080fd5b5061119486828701611098565b9497909650939450505050565b6000602082840312156111b357600080fd5b5035919050565b803566ffffffffffffff811681146111d157600080fd5b919050565b6000602082840312156111e857600080fd5b6111f1826111ba565b9392505050565b6000815180845260005b8181101561121e57602081850181015186830182015201611202565b506000602082860101526020601f19601f83011685010191505092915050565b66ffffffffffffff8516815283602082015282604082015260806060820152600061126c60808301846111f8565b9695505050505050565b600080600083850361012081121561128d57600080fd5b611296856111ba565b935060a0601f19820112156112aa57600080fd5b602085019250606060bf19820112156112c257600080fd5b506112cb61103e565b60c085013560ff811681146112df57600080fd5b815260e08501356020820152610100909401356040850152509093909250565b60006020828403121561131157600080fd5b81356001600160a01b03811681146111f157600080fd5b805166ffffffffffffff1682526020808201516001600160a01b0390811682850152604080840151818601526060808501518187015260808086015160c09188018290528051918801829052600095908101949093929091869060e08a01905b808310156113bd5787518051861683528781015188840152860151151586830152968601966001929092019190830190611388565b5060a0890151965089810360a08b01526113d781886111f8565b9a9950505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143a57603f19888603018452611428858351611328565b9450928501929085019060010161140c565b5092979650505050505050565b6020815260006111f16020830184611328565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161149857611498611470565b5060010190565b600181811c908216806114b357607f821691505b6020821081036114d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561151f57600081815260208120601f850160051c810160208610156115005750805b601f850160051c820191505b818110156107345782815560010161150c565b505050565b815167ffffffffffffffff81111561153e5761153e611028565b6115528161154c845461149f565b846114d9565b602080601f831160018114611587576000841561156f5750858301515b600019600386901b1c1916600185901b178555610734565b600085815260208120601f198616915b828110156115b657888601518255948401946001909101908401611597565b50858210156115d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600066ffffffffffffff80831681810361160057611600611470565b6001019392505050565b60006020828403121561161c57600080fd5b815180151581146111f157600080fd5b8181038181111561163f5761163f611470565b92915050565b8082018082111561163f5761163f61147056fea2646970667358221220d2f64fba3b0c46b1c9b9242eba65698dda6ccef63742efdb488f2494df323e3964736f6c63430008130033",
    "sourceMap": "221:1001:22:-:0;;;804:17:21;;;-1:-1:-1;;804:17:21;;;550:111:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:5;:22;;-1:-1:-1;;;;;;;;588:22:22;;-1:-1:-1;;;;;588:22:22;;;;;;;;;;620:11;:34;;-1:-1:-1;;;;;;620:34:22;;;;;;221:1001;;14:290:27;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;:::-;221:1001:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063788e28051161005b578063788e280514610146578063cc937a6714610166578063d068ce8a14610186578063fc0c546a146101b157600080fd5b80630a8b2a001461008d57806310a7fd7b146100bd57806319e2883e1461010e5780634534d95b14610131575b600080fd5b6100a061009b3660046110e4565b6101cb565b60405166ffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046111a1565b61049f565b6040805166ffffffffffffff909616865293151560208601526001600160a01b0392831693850193909352166060830152608082015260a0016100b4565b61012161011c3660046111d6565b6104fb565b6040516100b4949392919061123e565b61014461013f366004611276565b6105b8565b005b6101596101543660046112ff565b61073c565b6040516100b491906113e5565b6101796101743660046111d6565b610982565b6040516100b49190611447565b600354610199906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b60025461019990600160381b90046001600160a01b031681565b6000816102135760405162461bcd60e51b8152602060048201526011602482015270139bc81b1a5b995cc81c1c9bdd9a591959607a1b60448201526064015b60405180910390fd5b60008451116102645760405162461bcd60e51b815260206004820152601760248201527f4e6f206465736372697074696f6e2070726f7669646564000000000000000000604482015260640161020a565b60015460005b838110156103dc576040805160a0810190915260025466ffffffffffffff16815260019060208101338888868181106102a5576102a561145a565b6102bb92602060409092020190810191506112ff565b6001600160a01b03161481523360208201526040018787858181106102e2576102e261145a565b6102f892602060409092020190810191506112ff565b6001600160a01b031681526020018787858181106103185761031861145a565b6040908102929092016020908101359093525083546001808201865560009586529483902084516003909202018054938501519285015166ffffffffffffff90921667ffffffffffffffff1990941693909317600160381b921515929092029190911768010000000000000000600160e01b031916600160401b6001600160a01b0392831602178255606083015193820180546001600160a01b031916949091169390931790925560800151600290910155806103d481611486565b91505061026a565b50604080516080810182526002805466ffffffffffffff908116808452426020808601918252858701888152606087018d8152600094855291849052969092208551815466ffffffffffffff19169416939093178355516001830155935191810191909155915190919060038201906104559082611524565b50506002805466ffffffffffffff1691506000610471836115e4565b91906101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055509150509392505050565b600181815481106104af57600080fd5b600091825260209091206003909102018054600182015460029092015466ffffffffffffff8216935060ff600160381b830416926001600160a01b03600160401b909304831692169085565b600060208190529081526040902080546001820154600283015460038401805466ffffffffffffff9094169492939192916105359061149f565b80601f01602080910402602001604051908101604052809291908181526020018280546105619061149f565b80156105ae5780601f10610583576101008083540402835291602001916105ae565b820191906000526020600020905b81548152906001019060200180831161059157829003601f168201915b5050505050905084565b6000806105c485610d74565b91509150600082116106185760405162461bcd60e51b815260206004820152601860248201527f53706c69747a3a206e6f20616d6f756e7420746f207061790000000000000000604482015260640161020a565b60035483516020850151604080870151905163d505accf60e01b8152336004820152306024820152604481018790526080890135606482015260ff909316608484015260a483019190915260c48201526001600160a01b039091169063d505accf9060e401600060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b50506002546040516323b872dd60e01b81523360048201526001600160a01b03858116602483015260448201879052600160381b90920490911692506323b872dd91506064016020604051808303816000875af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610734919061160a565b505050505050565b60606000805b60025466ffffffffffffff1681101561081557600061076082610982565b9050846001600160a01b031681602001516001600160a01b031603610792578261078981611486565b93505050610803565b60005b81608001515181101561080057856001600160a01b0316826080015182815181106107c2576107c261145a565b6020026020010151600001516001600160a01b0316036107ee57836107e681611486565b945050610800565b806107f881611486565b915050610795565b50505b8061080d81611486565b915050610742565b508067ffffffffffffffff81111561082f5761082f611028565b60405190808252806020026020018201604052801561086857816020015b610855610fe0565b81526020019060019003908161084d5790505b5091506000805b60025466ffffffffffffff1681101561097a57600061088d82610982565b9050856001600160a01b031681602001516001600160a01b0316036108db578085846108b881611486565b9550815181106108ca576108ca61145a565b602002602001018190525050610968565b60005b81608001515181101561096557866001600160a01b03168260800151828151811061090b5761090b61145a565b6020026020010151600001516001600160a01b0316036109535781868561093181611486565b9650815181106109435761094361145a565b6020026020010181905250610965565b8061095d81611486565b9150506108de565b50505b8061097281611486565b91505061086f565b505050919050565b61098a610fe0565b60025466ffffffffffffff908116908316106109da5760405162461bcd60e51b815260206004820152600f60248201526e1a59081a5cc81b9bdd081d985b1a59608a1b604482015260640161020a565b66ffffffffffffff808316600090815260208181526040808320815160808101835281549095168552600181015492850192909252600282015490840152600381018054929392606084019190610a309061149f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5c9061149f565b8015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b5050505050815250509050600080826040015190505b600154811015610b25578466ffffffffffffff1660018281548110610ae657610ae661145a565b600091825260209091206003909102015466ffffffffffffff1603610b135781610b0f81611486565b9250505b80610b1d81611486565b915050610abf565b506040518060c00160405280836000015166ffffffffffffff1681526020016001846040015181548110610b5b57610b5b61145a565b600091825260208083206003909202909101546001600160a01b03600160401b909104168352858101519083015260408201526060018267ffffffffffffffff811115610baa57610baa611028565b604051908082528060200260200182016040528015610bf557816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610bc85790505b508152606084015160209091015260408301519093505b60015481101561097a578466ffffffffffffff1660018281548110610c3357610c3361145a565b600091825260209091206003909102015466ffffffffffffff160361097a576000836040015182610c64919061162c565b9050604051806060016040528060018481548110610c8457610c8461145a565b600091825260209182902060016003909202018101546001600160a01b031683528054929091019185908110610cbc57610cbc61145a565b906000526020600020906003020160020154815260200160018481548110610ce657610ce661145a565b6000918252602090912060039091020154600160381b900460ff16151590526080860151805183908110610d1c57610d1c61145a565b602002602001018190525060018281548110610d3a57610d3a61145a565b90600052602060002090600302016002015485606001818151610d5d9190611645565b905250819050610d6c81611486565b915050610c0c565b66ffffffffffffff80821660009081526020818152604080832081516080810183528154909516855260018101549285019290925260028201549084015260038101805492938493849391926060840191610dce9061149f565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfa9061149f565b8015610e475780601f10610e1c57610100808354040283529160200191610e47565b820191906000526020600020905b815481529060010190602001808311610e2a57829003601f168201915b5050505050815250509050600092506001816040015181548110610e6d57610e6d61145a565b60009182526020909120600390910201546040820151600160401b9091046001600160a01b031692505b600154811015610fd9578466ffffffffffffff1660018281548110610ebe57610ebe61145a565b600091825260209091206003909102015466ffffffffffffff1603610fd957336001600160a01b031660018281548110610efa57610efa61145a565b60009182526020909120600160039092020101546001600160a01b0316141580610f4e575060018181548110610f3257610f3261145a565b6000918252602090912060039091020154600160381b900460ff165b610fc75760018181548110610f6557610f6561145a565b90600052602060002090600302016002015484610f829190611645565b93506001808281548110610f9857610f9861145a565b600091825260209091206003909102018054911515600160381b0267ff00000000000000199092169190911790555b80610fd181611486565b915050610e97565b5050915091565b6040518060c00160405280600066ffffffffffffff16815260200160006001600160a01b03168152602001600081526020016000815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561106157611061611028565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561109057611090611028565b604052919050565b60008083601f8401126110aa57600080fd5b50813567ffffffffffffffff8111156110c257600080fd5b6020830191508360208260061b85010111156110dd57600080fd5b9250929050565b6000806000604084860312156110f957600080fd5b833567ffffffffffffffff8082111561111157600080fd5b818601915086601f83011261112557600080fd5b813560208282111561113957611139611028565b61114b601f8301601f19168201611067565b828152898284870101111561115f57600080fd5b8282860183830137600092810182019290925290955086013591508082111561118757600080fd5b5061119486828701611098565b9497909650939450505050565b6000602082840312156111b357600080fd5b5035919050565b803566ffffffffffffff811681146111d157600080fd5b919050565b6000602082840312156111e857600080fd5b6111f1826111ba565b9392505050565b6000815180845260005b8181101561121e57602081850181015186830182015201611202565b506000602082860101526020601f19601f83011685010191505092915050565b66ffffffffffffff8516815283602082015282604082015260806060820152600061126c60808301846111f8565b9695505050505050565b600080600083850361012081121561128d57600080fd5b611296856111ba565b935060a0601f19820112156112aa57600080fd5b602085019250606060bf19820112156112c257600080fd5b506112cb61103e565b60c085013560ff811681146112df57600080fd5b815260e08501356020820152610100909401356040850152509093909250565b60006020828403121561131157600080fd5b81356001600160a01b03811681146111f157600080fd5b805166ffffffffffffff1682526020808201516001600160a01b0390811682850152604080840151818601526060808501518187015260808086015160c09188018290528051918801829052600095908101949093929091869060e08a01905b808310156113bd5787518051861683528781015188840152860151151586830152968601966001929092019190830190611388565b5060a0890151965089810360a08b01526113d781886111f8565b9a9950505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561143a57603f19888603018452611428858351611328565b9450928501929085019060010161140c565b5092979650505050505050565b6020815260006111f16020830184611328565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161149857611498611470565b5060010190565b600181811c908216806114b357607f821691505b6020821081036114d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561151f57600081815260208120601f850160051c810160208610156115005750805b601f850160051c820191505b818110156107345782815560010161150c565b505050565b815167ffffffffffffffff81111561153e5761153e611028565b6115528161154c845461149f565b846114d9565b602080601f831160018114611587576000841561156f5750858301515b600019600386901b1c1916600185901b178555610734565b600085815260208120601f198616915b828110156115b657888601518255948401946001909101908401611597565b50858210156115d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600066ffffffffffffff80831681810361160057611600611470565b6001019392505050565b60006020828403121561161c57600080fd5b815180151581146111f157600080fd5b8181038181111561163f5761163f611470565b92915050565b8082018082111561163f5761163f61147056fea2646970667358221220d2f64fba3b0c46b1c9b9242eba65698dda6ccef63742efdb488f2494df323e3964736f6c63430008130033",
    "sourceMap": "221:1001:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3601:898:21;;;;;;:::i;:::-;;:::i;:::-;;;2406:16:27;2394:29;;;2376:48;;2364:2;2349:18;3601:898:21;;;;;;;;772:26;;;;;;:::i;:::-;;:::i;:::-;;;;2901:16:27;2889:29;;;2871:48;;2962:14;;2955:22;2950:2;2935:18;;2928:50;-1:-1:-1;;;;;3052:15:27;;;3032:18;;;3025:43;;;;3104:15;3099:2;3084:18;;3077:43;3151:3;3136:19;;3129:35;2858:3;2843:19;772:26:21;2620:550:27;722:43:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;667:553:22:-;;;;;;:::i;:::-;;:::i;:::-;;2475:1120:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;828:1067::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;280:31:22:-;;;;;-1:-1:-1;;;;;280:31:22;;;;;;-1:-1:-1;;;;;8092:32:27;;;8074:51;;8062:2;8047:18;280:31:22;7906:225:27;255:19:22;;;;;-1:-1:-1;;;255:19:22;;-1:-1:-1;;;;;255:19:22;;;3601:898:21;3722:6;3748:16;3740:46;;;;-1:-1:-1;;;3740:46:21;;8562:2:27;3740:46:21;;;8544:21:27;8601:2;8581:18;;;8574:30;-1:-1:-1;;;8620:18:27;;;8613:47;8677:18;;3740:46:21;;;;;;;;;3832:1;3810:11;3804:25;:29;3796:65;;;;-1:-1:-1;;;3796:65:21;;8908:2:27;3796:65:21;;;8890:21:27;8947:2;8927:18;;;8920:30;8986:25;8966:18;;;8959:53;9029:18;;3796:65:21;8706:347:27;3796:65:21;3896:6;:13;3872:21;3920:349;3937:16;;;3920:349;;;4003:241;;;;;;;;;4164:6;;;;4003:241;;3974:6;;4003:241;;;4215:10;4198:5;;4204:1;4198:8;;;;;;;:::i;:::-;:13;;;:8;;;;;:13;;;;-1:-1:-1;4198:13:21;:::i;:::-;-1:-1:-1;;;;;4198:27:21;;4003:241;;4083:10;4003:241;;;;;;4042:5;;4048:1;4042:8;;;;;;;:::i;:::-;:13;;;:8;;;;;:13;;;;-1:-1:-1;4042:13:21;:::i;:::-;-1:-1:-1;;;;;4003:241:21;;;;;4123:5;;4129:1;4123:8;;;;;;;:::i;:::-;;;;;;;;;:15;;;;;4003:241;;;-1:-1:-1;3974:284:21;;;;;;;;-1:-1:-1;3974:284:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3974:284:21;;;;;;;-1:-1:-1;;;3974:284:21;;;;;;;;;;;-1:-1:-1;;;;;;3974:284:21;-1:-1:-1;;;;;;;;3974:284:21;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3974:284:21;;;;;;;;;;;;;;;;;;;;3955:3;;;;:::i;:::-;;;;3920:349;;;-1:-1:-1;4297:170:21;;;;;;;;4402:6;;;;;;;4297:170;;;4369:15;4297:170;;;;;;;;;;;;;;;;;;;-1:-1:-1;4278:16:21;;;;;;;;;;;:189;;;;-1:-1:-1;;4278:189:21;;;;;;;;;;-1:-1:-1;4278:189:21;;;;;;;;;;;;;;4297:170;;4278:16;:189;;;;;;;;:::i;:::-;-1:-1:-1;;4484:6:21;:8;;;;;-1:-1:-1;4484:6:21;:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4477:15;;;3601:898;;;;;:::o;772:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;772:26:21;-1:-1:-1;;;772:26:21;;;;-1:-1:-1;;;;;;;;772:26:21;;;;;;;;;:::o;722:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;667:553:22:-;805:17;824:16;844:30;864:9;844:19;:30::i;:::-;804:70;;;;905:1;893:9;:13;885:50;;;;-1:-1:-1;;;885:50:22;;12465:2:27;885:50:22;;;12447:21:27;12504:2;12484:18;;;12477:30;12543:26;12523:18;;;12516:54;12587:18;;885:50:22;12263:348:27;885:50:22;946:11;;1081;;1106;;;;1131;;;;;946:206;;-1:-1:-1;;;946:206:22;;978:10;946:206;;;12965:34:27;1010:4:22;13015:18:27;;;13008:43;13067:18;;;13060:34;;;1052:15:22;;;;13110:18:27;;;13103:34;13186:4;13174:17;;;13153:19;;;13146:46;13208:19;;;13201:35;;;;13252:19;;;13245:35;-1:-1:-1;;;;;946:11:22;;;;:18;;12899:19:27;;946:206:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:5:22;;:51;;-1:-1:-1;;;1162:51:22;;1181:10;1162:51;;;13531:34:27;-1:-1:-1;;;;;13601:15:27;;;13581:18;;;13574:43;13633:18;;;13626:34;;;-1:-1:-1;;;1162:5:22;;;;;;;-1:-1:-1;1162:18:22;;-1:-1:-1;13466:18:27;;1162:51:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;794:426;;667:553;;;:::o;2475:1120:21:-;2554:25;2591:10;2620:6;2615:425;2636:6;;;;2632:10;;2615:425;;;2663:22;2688:21;2706:1;2688:10;:21::i;:::-;2663:46;;2743:4;-1:-1:-1;;;;;2727:20:21;:7;:12;;;-1:-1:-1;;;;;2727:20:21;;2723:92;;2767:7;;;;:::i;:::-;;;;2792:8;;;2723:92;2833:9;2828:202;2855:7;:13;;;:20;2848:4;:27;2828:202;;;2935:4;-1:-1:-1;;;;;2907:32:21;:7;:13;;;2921:4;2907:19;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;2907:32:21;;2903:113;;2963:7;;;;:::i;:::-;;;;2992:5;;2903:113;2877:6;;;;:::i;:::-;;;;2828:202;;;;2649:391;2615:425;2644:3;;;;:::i;:::-;;;;2615:425;;;;3075:5;3061:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3050:31;;3091:13;3123:6;3118:471;3139:6;;;;3135:10;;3118:471;;;3166:22;3191:21;3209:1;3191:10;:21::i;:::-;3166:46;;3246:4;-1:-1:-1;;;;;3230:20:21;:7;:12;;;-1:-1:-1;;;;;3230:20:21;;3226:115;;3293:7;3270:8;3279:10;;;;:::i;:::-;;;3270:20;;;;;;;;:::i;:::-;;;;;;:30;;;;3318:8;;;3226:115;3359:9;3354:225;3381:7;:13;;;:20;3374:4;:27;3354:225;;;3461:4;-1:-1:-1;;;;;3433:32:21;:7;:13;;;3447:4;3433:19;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;3433:32:21;;3429:136;;3512:7;3489:8;3498:10;;;;:::i;:::-;;;3489:20;;;;;;;;:::i;:::-;;;;;;:30;;;;3541:5;;3429:136;3403:6;;;;:::i;:::-;;;;3354:225;;;;3152:437;3118:471;3147:3;;;;:::i;:::-;;;;3118:471;;;;2581:1014;;2475:1120;;;:::o;828:1067::-;894:22;;:::i;:::-;941:6;;;;;;936:11;;;;928:39;;;;-1:-1:-1;;;928:39:21;;14155:2:27;928:39:21;;;14137:21:27;14194:2;14174:18;;;14167:30;-1:-1:-1;;;14213:18:27;;;14206:45;14268:18;;928:39:21;13953:339:27;928:39:21;1001:12;;;;978:20;1001:12;;;;;;;;;;;978:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:10;1052:6;1061:4;:24;;;1052:33;;1047:152;1091:6;:13;1087:17;;1047:152;;;1145:2;1129:18;;:6;1136:1;1129:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:12;;;:18;1125:64;;1167:7;;;;:::i;:::-;;;;1125:64;1106:3;;;;:::i;:::-;;;;1047:152;;;;1218:251;;;;;;;;1244:4;:7;;;1218:251;;;;;;1271:6;1278:4;:24;;;1271:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;;;;1271:37:21;;;;1218:251;;1376:14;;;;1218:251;;;;;;;;;;1429:5;1411:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1411:24:21;;-1:-1:-1;;1411:24:21;;;;;;;;;;;-1:-1:-1;1218:251:21;;1335:16;;;;1218:251;;;;;-1:-1:-1;1493:24:21;;;1208:261;;-1:-1:-1;1479:410:21;1523:6;:13;1519:17;;1479:410;;;1577:2;1561:18;;:6;1568:1;1561:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:12;;;:18;1581:5;1557:29;1601:13;1621:4;:24;;;1617:1;:28;;;;:::i;:::-;1601:44;;1685:145;;;;;;;;1721:6;1728:1;1721:9;;;;;;;;:::i;:::-;;;;;;;;;;:14;:9;;;;;:14;;;-1:-1:-1;;;;;1721:14:21;1685:145;;1761:9;;1685:145;;;;;1768:1;;1761:9;;;;;;:::i;:::-;;;;;;;;;;;:16;;;1685:145;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:14;-1:-1:-1;;;1801:14:21;;;;1685:145;;;;1659:13;;;;:23;;1673:8;;1659:23;;;;;;:::i;:::-;;;;;;:171;;;;1862:6;1869:1;1862:9;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;1844:7;:14;;:34;;;;;;;:::i;:::-;;;-1:-1:-1;1538:3:21;;-1:-1:-1;1538:3:21;;;:::i;:::-;;;;1479:410;;1901:568;2041:19;;;;1971:17;2041:19;;;;;;;;;;;2018:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:17;;;;;;2018:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:1;2071:13;;2105:6;2112:4;:24;;;2105:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;2167:24;;;;-1:-1:-1;;;2105:37:21;;;-1:-1:-1;;;;;2105:37:21;;-1:-1:-1;2153:310:21;2197:6;:13;2193:17;;2153:310;;;2251:9;2235:25;;:6;2242:1;2235:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:12;;;:25;2262:5;2231:36;2303:10;-1:-1:-1;;;;;2285:28:21;:6;2292:1;2285:9;;;;;;;;:::i;:::-;;;;;;;;;:14;:9;;;;;:14;;-1:-1:-1;;;;;2285:14:21;:28;;;:46;;;2317:6;2324:1;2317:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:14;-1:-1:-1;;;2317:14:21;;;;2285:46;2351:8;2281:93;2401:6;2408:1;2401:9;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;2388:29;;;;;:::i;:::-;;;2448:4;2431:6;2438:1;2431:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:21;;;;;-1:-1:-1;;;2431:21:21;-1:-1:-1;;2431:21:21;;;;;;;;;2153:310;2212:3;;;;:::i;:::-;;;;2153:310;;;;2008:461;1901:568;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:27;505:40;;575:18;560:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:27:o;684:393::-;773:8;783:6;837:3;830:4;822:6;818:17;814:27;804:55;;855:1;852;845:12;804:55;-1:-1:-1;878:20:27;;921:18;910:30;;907:50;;;953:1;950;943:12;907:50;990:4;982:6;978:17;966:29;;1050:3;1043:4;1033:6;1030:1;1026:14;1018:6;1014:27;1010:38;1007:47;1004:67;;;1067:1;1064;1057:12;1004:67;684:393;;;;;:::o;1082:1145::-;1225:6;1233;1241;1294:2;1282:9;1273:7;1269:23;1265:32;1262:52;;;1310:1;1307;1300:12;1262:52;1350:9;1337:23;1379:18;1420:2;1412:6;1409:14;1406:34;;;1436:1;1433;1426:12;1406:34;1474:6;1463:9;1459:22;1449:32;;1519:7;1512:4;1508:2;1504:13;1500:27;1490:55;;1541:1;1538;1531:12;1490:55;1577:2;1564:16;1599:4;1622:2;1618;1615:10;1612:36;;;1628:18;;:::i;:::-;1670:53;1713:2;1694:13;;-1:-1:-1;;1690:27:27;1686:36;;1670:53;:::i;:::-;1746:2;1739:5;1732:17;1786:7;1781:2;1776;1772;1768:11;1764:20;1761:33;1758:53;;;1807:1;1804;1797:12;1758:53;1862:2;1857;1853;1849:11;1844:2;1837:5;1833:14;1820:45;1906:1;1885:14;;;1881:23;;1874:34;;;;1889:5;;-1:-1:-1;1970:18:27;;1957:32;;-1:-1:-1;2001:16:27;;;1998:36;;;2030:1;2027;2020:12;1998:36;;2069:98;2159:7;2148:8;2137:9;2133:24;2069:98;:::i;:::-;1082:1145;;2186:8;;-1:-1:-1;2043:124:27;;-1:-1:-1;;;;1082:1145:27:o;2435:180::-;2494:6;2547:2;2535:9;2526:7;2522:23;2518:32;2515:52;;;2563:1;2560;2553:12;2515:52;-1:-1:-1;2586:23:27;;2435:180;-1:-1:-1;2435:180:27:o;3175:169::-;3242:20;;3302:16;3291:28;;3281:39;;3271:67;;3334:1;3331;3324:12;3271:67;3175:169;;;:::o;3349:184::-;3407:6;3460:2;3448:9;3439:7;3435:23;3431:32;3428:52;;;3476:1;3473;3466:12;3428:52;3499:28;3517:9;3499:28;:::i;:::-;3489:38;3349:184;-1:-1:-1;;;3349:184:27:o;3538:423::-;3580:3;3618:5;3612:12;3645:6;3640:3;3633:19;3670:1;3680:162;3694:6;3691:1;3688:13;3680:162;;;3756:4;3812:13;;;3808:22;;3802:29;3784:11;;;3780:20;;3773:59;3709:12;3680:162;;;3684:3;3887:1;3880:4;3871:6;3866:3;3862:16;3858:27;3851:38;3950:4;3943:2;3939:7;3934:2;3926:6;3922:15;3918:29;3913:3;3909:39;3905:50;3898:57;;;3538:423;;;;:::o;3966:456::-;4209:16;4201:6;4197:29;4186:9;4179:48;4263:6;4258:2;4247:9;4243:18;4236:34;4306:6;4301:2;4290:9;4286:18;4279:34;4349:3;4344:2;4333:9;4329:18;4322:31;4160:4;4370:46;4411:3;4400:9;4396:19;4388:6;4370:46;:::i;:::-;4362:54;3966:456;-1:-1:-1;;;;;;3966:456:27:o;4427:800::-;4558:6;4566;4574;4618:9;4609:7;4605:23;4648:3;4644:2;4640:12;4637:32;;;4665:1;4662;4655:12;4637:32;4688:28;4706:9;4688:28;:::i;:::-;4678:38;-1:-1:-1;4750:3:27;-1:-1:-1;;4732:16:27;;4728:26;4725:46;;;4767:1;4764;4757:12;4725:46;4805:2;4790:18;;;-1:-1:-1;4843:4:27;-1:-1:-1;;4824:17:27;;4820:28;4817:48;;;4861:1;4858;4851:12;4817:48;;4887:22;;:::i;:::-;4961:3;4950:9;4946:19;4933:33;5010:4;5001:7;4997:18;4988:7;4985:31;4975:59;;5030:1;5027;5020:12;4975:59;5043:22;;5125:3;5110:19;;5097:33;5092:2;5081:14;;5074:57;5191:3;5176:19;;;5163:33;5158:2;5147:14;;5140:57;-1:-1:-1;4427:800:27;;;;-1:-1:-1;4427:800:27:o;5232:286::-;5291:6;5344:2;5332:9;5323:7;5319:23;5315:32;5312:52;;;5360:1;5357;5350:12;5312:52;5386:23;;-1:-1:-1;;;;;5438:31:27;;5428:42;;5418:70;;5484:1;5481;5474:12;5523:1265;5642:12;;5656:16;5638:35;5626:48;;5693:4;5732:14;;;5726:21;-1:-1:-1;;;;;5815:21:27;;;5801:12;;;5794:43;5856:4;5896:14;;;5890:21;5876:12;;;5869:43;5931:4;5971:14;;;5965:21;5951:12;;;5944:43;6035:4;6024:16;;;6018:23;5612:4;6057:14;;;6050:28;;;6127:21;;5603:14;;;6157:20;;;5573:3;;6231:23;;;;5693:4;;5856;5766:19;;5573:3;;6204;6195:13;;;6282:342;6296:6;6293:1;6290:13;6282:342;;;6355:13;;6399:9;;6395:18;;6381:33;;6456:11;;;6450:18;6434:14;;;6427:42;6525:11;;6519:18;6512:26;6505:34;6489:14;;;6482:58;6599:15;;;;6318:1;6311:9;;;;;6562:14;;;;6282:342;;;6286:3;6672:4;6665:5;6661:16;6655:23;6633:45;;6721:3;6714:5;6710:15;6703:4;6698:3;6694:14;6687:39;6742:40;6776:5;6760:14;6742:40;:::i;:::-;6735:47;5523:1265;-1:-1:-1;;;;;;;;;;5523:1265:27:o;6793:843::-;6987:4;7016:2;7056;7045:9;7041:18;7086:2;7075:9;7068:21;7109:6;7144;7138:13;7175:6;7167;7160:22;7213:2;7202:9;7198:18;7191:25;;7275:2;7265:6;7262:1;7258:14;7247:9;7243:30;7239:39;7225:53;;7313:2;7305:6;7301:15;7334:1;7344:263;7358:6;7355:1;7352:13;7344:263;;;7451:2;7447:7;7435:9;7427:6;7423:22;7419:36;7414:3;7407:49;7479:48;7520:6;7511;7505:13;7479:48;:::i;:::-;7469:58;-1:-1:-1;7585:12:27;;;;7550:15;;;;7380:1;7373:9;7344:263;;;-1:-1:-1;7624:6:27;;6793:843;-1:-1:-1;;;;;;;6793:843:27:o;7641:260::-;7822:2;7811:9;7804:21;7785:4;7842:53;7891:2;7880:9;7876:18;7868:6;7842:53;:::i;9058:127::-;9119:10;9114:3;9110:20;9107:1;9100:31;9150:4;9147:1;9140:15;9174:4;9171:1;9164:15;9190:127;9251:10;9246:3;9242:20;9239:1;9232:31;9282:4;9279:1;9272:15;9306:4;9303:1;9296:15;9322:135;9361:3;9382:17;;;9379:43;;9402:18;;:::i;:::-;-1:-1:-1;9449:1:27;9438:13;;9322:135::o;9462:380::-;9541:1;9537:12;;;;9584;;;9605:61;;9659:4;9651:6;9647:17;9637:27;;9605:61;9712:2;9704:6;9701:14;9681:18;9678:38;9675:161;;9758:10;9753:3;9749:20;9746:1;9739:31;9793:4;9790:1;9783:15;9821:4;9818:1;9811:15;9675:161;;9462:380;;;:::o;9973:545::-;10075:2;10070:3;10067:11;10064:448;;;10111:1;10136:5;10132:2;10125:17;10181:4;10177:2;10167:19;10251:2;10239:10;10235:19;10232:1;10228:27;10222:4;10218:38;10287:4;10275:10;10272:20;10269:47;;;-1:-1:-1;10310:4:27;10269:47;10365:2;10360:3;10356:12;10353:1;10349:20;10343:4;10339:31;10329:41;;10420:82;10438:2;10431:5;10428:13;10420:82;;;10483:17;;;10464:1;10453:13;10420:82;;10064:448;9973:545;;;:::o;10694:1352::-;10820:3;10814:10;10847:18;10839:6;10836:30;10833:56;;;10869:18;;:::i;:::-;10898:97;10988:6;10948:38;10980:4;10974:11;10948:38;:::i;:::-;10942:4;10898:97;:::i;:::-;11050:4;;11114:2;11103:14;;11131:1;11126:663;;;;11833:1;11850:6;11847:89;;;-1:-1:-1;11902:19:27;;;11896:26;11847:89;-1:-1:-1;;10651:1:27;10647:11;;;10643:24;10639:29;10629:40;10675:1;10671:11;;;10626:57;11949:81;;11096:944;;11126:663;9920:1;9913:14;;;9957:4;9944:18;;-1:-1:-1;;11162:20:27;;;11280:236;11294:7;11291:1;11288:14;11280:236;;;11383:19;;;11377:26;11362:42;;11475:27;;;;11443:1;11431:14;;;;11310:19;;11280:236;;;11284:3;11544:6;11535:7;11532:19;11529:201;;;11605:19;;;11599:26;-1:-1:-1;;11688:1:27;11684:14;;;11700:3;11680:24;11676:37;11672:42;11657:58;11642:74;;11529:201;-1:-1:-1;;;;;11776:1:27;11760:14;;;11756:22;11743:36;;-1:-1:-1;10694:1352:27:o;12051:207::-;12089:3;12117:16;12168:2;12161:5;12157:14;12195:2;12186:7;12183:15;12180:41;;12201:18;;:::i;:::-;12250:1;12237:15;;12051:207;-1:-1:-1;;;12051:207:27:o;13671:277::-;13738:6;13791:2;13779:9;13770:7;13766:23;13762:32;13759:52;;;13807:1;13804;13797:12;13759:52;13839:9;13833:16;13892:5;13885:13;13878:21;13871:5;13868:32;13858:60;;13914:1;13911;13904:12;14297:128;14364:9;;;14385:11;;;14382:37;;;14399:18;;:::i;:::-;14297:128;;;;:::o;14430:125::-;14495:9;;;14516:10;;;14513:36;;;14529:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addReceipt(string,(address,uint256)[])": "0a8b2a00",
    "getReceipt(uint56)": "cc937a67",
    "getReceiptsByAddress(address)": "788e2805",
    "ledger(uint256)": "10a7fd7b",
    "metadata(uint56)": "19e2883e",
    "payReceipt(uint56,(address,address,uint256,uint256,uint256),(uint8,bytes32,bytes32))": "4534d95b",
    "token()": "fc0c546a",
    "tokenPermit()": "d068ce8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Registry.CreateReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"}],\"name\":\"addReceipt\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"\",\"type\":\"uint56\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.ReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Registry.Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getReceiptsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.ReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Registry.Receipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"\",\"type\":\"uint56\"}],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ledgerStartPosition\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"receiptId\",\"type\":\"uint56\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Splitz.Permit\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Splitz.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"payReceipt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPermit\",\"outputs\":[{\"internalType\":\"contract IERC20Permit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Splitz.sol\":\"Splitz\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"src/Registry.sol\":{\"keccak256\":\"0x3cf7529badfd8b9861ae085cdd7a0da303f6755580cd043988599f8bff5b4832\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c0d7ba0d9a7a8234edde6de49bc5bd1becedb19ed5d559a408ece134dcd08032\",\"dweb:/ipfs/QmYHvgW7WXRZ5on39LZSzDMhv27J194V6aERssj3qAMwbc\"]},\"src/Splitz.sol\":{\"keccak256\":\"0x65f4b5b1e2a5a97d73cb876a58b9c5e8c3ee71aaa490fe7c64fe0ea7628db426\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f12d959e2f6b49e3a21e7e515683e15407a3424607f1007482fa4353205a95f6\",\"dweb:/ipfs/QmUQ9veyqPo1D5Z2j4otcC3Q3qiM2VJygqM6sAoYrxSogf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Registry.CreateReceiptLine[]",
              "name": "lines",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addReceipt",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "",
              "type": "uint56"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceipt",
          "outputs": [
            {
              "internalType": "struct Registry.Receipt",
              "name": "receipt",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint56",
                  "name": "id",
                  "type": "uint56"
                },
                {
                  "internalType": "address",
                  "name": "owed",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Registry.ReceiptLine[]",
                  "name": "lines",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owes",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "paid",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceiptsByAddress",
          "outputs": [
            {
              "internalType": "struct Registry.Receipt[]",
              "name": "receipts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint56",
                  "name": "id",
                  "type": "uint56"
                },
                {
                  "internalType": "address",
                  "name": "owed",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Registry.ReceiptLine[]",
                  "name": "lines",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owes",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "paid",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "bool",
              "name": "paid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owes",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "",
              "type": "uint56"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "metadata",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ledgerStartPosition",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "receiptId",
              "type": "uint56"
            },
            {
              "internalType": "struct Splitz.Permit",
              "name": "permit",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Splitz.Signature",
              "name": "signature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payReceipt"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPermit",
          "outputs": [
            {
              "internalType": "contract IERC20Permit",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":permit2/=lib/permit2/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Splitz.sol": "Splitz"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "src/Registry.sol": {
        "keccak256": "0x3cf7529badfd8b9861ae085cdd7a0da303f6755580cd043988599f8bff5b4832",
        "urls": [
          "bzz-raw://c0d7ba0d9a7a8234edde6de49bc5bd1becedb19ed5d559a408ece134dcd08032",
          "dweb:/ipfs/QmYHvgW7WXRZ5on39LZSzDMhv27J194V6aERssj3qAMwbc"
        ],
        "license": "UNLICENSED"
      },
      "src/Splitz.sol": {
        "keccak256": "0x65f4b5b1e2a5a97d73cb876a58b9c5e8c3ee71aaa490fe7c64fe0ea7628db426",
        "urls": [
          "bzz-raw://f12d959e2f6b49e3a21e7e515683e15407a3424607f1007482fa4353205a95f6",
          "dweb:/ipfs/QmUQ9veyqPo1D5Z2j4otcC3Q3qiM2VJygqM6sAoYrxSogf"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Splitz.sol",
    "id": 29134,
    "exportedSymbols": {
      "IERC20": [28469],
      "IERC20Permit": [28505],
      "Registry": [29026],
      "Splitz": [29133]
    },
    "nodeType": "SourceUnit",
    "src": "39:1184:22",
    "nodes": [
      {
        "id": 29028,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".13"]
      },
      {
        "id": 29029,
        "nodeType": "ImportDirective",
        "src": "65:55:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29134,
        "sourceUnit": 28392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29030,
        "nodeType": "ImportDirective",
        "src": "121:73:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29134,
        "sourceUnit": 28506,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29031,
        "nodeType": "ImportDirective",
        "src": "195:24:22",
        "nodes": [],
        "absolutePath": "src/Registry.sol",
        "file": "./Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29134,
        "sourceUnit": 29027,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29133,
        "nodeType": "ContractDefinition",
        "src": "221:1001:22",
        "nodes": [
          {
            "id": 29036,
            "nodeType": "VariableDeclaration",
            "src": "255:19:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "269:5:22",
            "scope": 29133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$28469",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29035,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29034,
                "name": "IERC20",
                "nameLocations": ["255:6:22"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28469,
                "src": "255:6:22"
              },
              "referencedDeclaration": 28469,
              "src": "255:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$28469",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29039,
            "nodeType": "VariableDeclaration",
            "src": "280:31:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "d068ce8a",
            "mutability": "mutable",
            "name": "tokenPermit",
            "nameLocation": "300:11:22",
            "scope": 29133,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Permit_$28505",
              "typeString": "contract IERC20Permit"
            },
            "typeName": {
              "id": 29038,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29037,
                "name": "IERC20Permit",
                "nameLocations": ["280:12:22"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28505,
                "src": "280:12:22"
              },
              "referencedDeclaration": 28505,
              "src": "280:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                "typeString": "contract IERC20Permit"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29046,
            "nodeType": "StructDefinition",
            "src": "318:79:22",
            "nodes": [],
            "canonicalName": "Splitz.Signature",
            "members": [
              {
                "constant": false,
                "id": 29041,
                "mutability": "mutable",
                "name": "v",
                "nameLocation": "351:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 29046,
                "src": "345:7:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 29040,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "345:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29043,
                "mutability": "mutable",
                "name": "r",
                "nameLocation": "370:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 29046,
                "src": "362:9:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29042,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "362:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29045,
                "mutability": "mutable",
                "name": "s",
                "nameLocation": "389:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 29046,
                "src": "381:9:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29044,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "381:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Signature",
            "nameLocation": "325:9:22",
            "scope": 29133,
            "visibility": "public"
          },
          {
            "id": 29057,
            "nodeType": "StructDefinition",
            "src": "403:141:22",
            "nodes": [],
            "canonicalName": "Splitz.Permit",
            "members": [
              {
                "constant": false,
                "id": 29048,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "435:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 29057,
                "src": "427:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29047,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "427:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29050,
                "mutability": "mutable",
                "name": "spender",
                "nameLocation": "458:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 29057,
                "src": "450:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29049,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29052,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "483:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 29057,
                "src": "475:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29051,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29054,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "506:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 29057,
                "src": "498:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29053,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29056,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "529:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 29057,
                "src": "521:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29055,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "521:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Permit",
            "nameLocation": "410:6:22",
            "scope": 29133,
            "visibility": "public"
          },
          {
            "id": 29075,
            "nodeType": "FunctionDefinition",
            "src": "550:111:22",
            "nodes": [],
            "body": {
              "id": 29074,
              "nodeType": "Block",
              "src": "578:83:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29062,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29036,
                      "src": "588:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$28469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29064,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29059,
                          "src": "603:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29063,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28469,
                        "src": "596:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$28469_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 29065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "596:14:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$28469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "588:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28469",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 29067,
                  "nodeType": "ExpressionStatement",
                  "src": "588:22:22"
                },
                {
                  "expression": {
                    "id": 29072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29068,
                      "name": "tokenPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29039,
                      "src": "620:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                        "typeString": "contract IERC20Permit"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29070,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29059,
                          "src": "647:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29069,
                        "name": "IERC20Permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28505,
                        "src": "634:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$28505_$",
                          "typeString": "type(contract IERC20Permit)"
                        }
                      },
                      "id": 29071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "634:20:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                        "typeString": "contract IERC20Permit"
                      }
                    },
                    "src": "620:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                      "typeString": "contract IERC20Permit"
                    }
                  },
                  "id": 29073,
                  "nodeType": "ExpressionStatement",
                  "src": "620:34:22"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29059,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "570:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29075,
                  "src": "562:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:16:22"
            },
            "returnParameters": {
              "id": 29061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:22"
            },
            "scope": 29133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29132,
            "nodeType": "FunctionDefinition",
            "src": "667:553:22",
            "nodes": [],
            "body": {
              "id": 29131,
              "nodeType": "Block",
              "src": "794:426:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [29087, 29089],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29087,
                      "mutability": "mutable",
                      "name": "amountDue",
                      "nameLocation": "813:9:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 29131,
                      "src": "805:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29086,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "805:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29089,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "832:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 29131,
                      "src": "824:16:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29088,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29094,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29092,
                        "name": "receiptId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29077,
                        "src": "864:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint56",
                          "typeString": "uint56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint56",
                          "typeString": "uint56"
                        }
                      ],
                      "expression": {
                        "id": 29090,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29026,
                        "src": "844:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$29026_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 29091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "853:10:22",
                      "memberName": "payReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28783,
                      "src": "844:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint56_$returns$_t_uint256_$_t_address_$",
                        "typeString": "function (uint56) returns (uint256,address)"
                      }
                    },
                    "id": 29093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "804:70:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29096,
                          "name": "amountDue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29087,
                          "src": "893:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "905:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "893:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53706c69747a3a206e6f20616d6f756e7420746f20706179",
                        "id": 29099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "908:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ca7833178f839923af7cf70f6d70fed3e0b6ce861bf7294255d20966e9fdf78",
                          "typeString": "literal_string \"Splitz: no amount to pay\""
                        },
                        "value": "Splitz: no amount to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ca7833178f839923af7cf70f6d70fed3e0b6ce861bf7294255d20966e9fdf78",
                          "typeString": "literal_string \"Splitz: no amount to pay\""
                        }
                      ],
                      "id": 29095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "885:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29101,
                  "nodeType": "ExpressionStatement",
                  "src": "885:50:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "978:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "982:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "978:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1010:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Splitz_$29133",
                              "typeString": "contract Splitz"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Splitz_$29133",
                              "typeString": "contract Splitz"
                            }
                          ],
                          "id": 29108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1002:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1002:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1002:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29111,
                        "name": "amountDue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29087,
                        "src": "1029:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29112,
                          "name": "permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29080,
                          "src": "1052:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit_$29057_calldata_ptr",
                            "typeString": "struct Splitz.Permit calldata"
                          }
                        },
                        "id": 29113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1059:8:22",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29056,
                        "src": "1052:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29114,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29083,
                          "src": "1081:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$29046_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29115,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1091:1:22",
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29041,
                        "src": "1081:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 29116,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29083,
                          "src": "1106:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$29046_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1116:1:22",
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29043,
                        "src": "1106:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 29118,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29083,
                          "src": "1131:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$29046_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1141:1:22",
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29045,
                        "src": "1131:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 29102,
                        "name": "tokenPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29039,
                        "src": "946:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 29104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "958:6:22",
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28490,
                      "src": "946:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 29120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:206:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29121,
                  "nodeType": "ExpressionStatement",
                  "src": "946:206:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1181:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1185:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1181:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29127,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29089,
                        "src": "1193:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29128,
                        "name": "amountDue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29087,
                        "src": "1203:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29122,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29036,
                        "src": "1162:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 29124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1168:12:22",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28468,
                      "src": "1162:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29130,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:51:22"
                }
              ]
            },
            "functionSelector": "4534d95b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payReceipt",
            "nameLocation": "676:10:22",
            "parameters": {
              "id": 29084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29077,
                  "mutability": "mutable",
                  "name": "receiptId",
                  "nameLocation": "703:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29132,
                  "src": "696:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint56",
                    "typeString": "uint56"
                  },
                  "typeName": {
                    "id": 29076,
                    "name": "uint56",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint56",
                      "typeString": "uint56"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29080,
                  "mutability": "mutable",
                  "name": "permit",
                  "nameLocation": "738:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29132,
                  "src": "722:22:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$29057_calldata_ptr",
                    "typeString": "struct Splitz.Permit"
                  },
                  "typeName": {
                    "id": 29079,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29078,
                      "name": "Permit",
                      "nameLocations": ["722:6:22"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29057,
                      "src": "722:6:22"
                    },
                    "referencedDeclaration": 29057,
                    "src": "722:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$29057_storage_ptr",
                      "typeString": "struct Splitz.Permit"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29083,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "771:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29132,
                  "src": "754:26:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$29046_memory_ptr",
                    "typeString": "struct Splitz.Signature"
                  },
                  "typeName": {
                    "id": 29082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29081,
                      "name": "Signature",
                      "nameLocations": ["754:9:22"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29046,
                      "src": "754:9:22"
                    },
                    "referencedDeclaration": 29046,
                    "src": "754:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$29046_storage_ptr",
                      "typeString": "struct Splitz.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:100:22"
            },
            "returnParameters": {
              "id": 29085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:22"
            },
            "scope": 29133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29032,
              "name": "Registry",
              "nameLocations": ["240:8:22"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29026,
              "src": "240:8:22"
            },
            "id": 29033,
            "nodeType": "InheritanceSpecifier",
            "src": "240:8:22"
          }
        ],
        "canonicalName": "Splitz",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [29133, 29026],
        "name": "Splitz",
        "nameLocation": "230:6:22",
        "scope": 29134,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}
