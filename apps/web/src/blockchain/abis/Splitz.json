{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owes",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Registry.CreateReceiptLine[]",
          "name": "lines",
          "type": "tuple[]"
        }
      ],
      "name": "addReceipt",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "",
          "type": "uint56"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "paid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Registry.ReceiptLine[]",
              "name": "lines",
              "type": "tuple[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Registry.Receipt",
          "name": "receipt",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getReceiptsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "paid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Registry.ReceiptLine[]",
              "name": "lines",
              "type": "tuple[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Registry.Receipt[]",
          "name": "receipts",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ledger",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        },
        {
          "internalType": "bool",
          "name": "paid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owes",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "",
          "type": "uint56"
        }
      ],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "uint56",
          "name": "id",
          "type": "uint56"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ledgerStartPosition",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint56",
          "name": "receiptId",
          "type": "uint56"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct Splitz.Permit",
          "name": "permit",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Splitz.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPermit",
      "outputs": [
        {
          "internalType": "contract IERC20Permit",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526002805466ffffffffffffff1916905534801561002057600080fd5b5060405161154338038061154383398101604081905261003f91610083565b60028054600160381b600160d81b0319166701000000000000006001600160a01b0393909316928302179055600380546001600160a01b03191690911790556100b3565b60006020828403121561009557600080fd5b81516001600160a01b03811681146100ac57600080fd5b9392505050565b611481806100c26000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac1c62141161005b578063ac1c621414610151578063cc937a6714610166578063d068ce8a14610186578063fc0c546a146101b157600080fd5b80630a8b2a001461008d57806310a7fd7b146100bd57806319e2883e1461010e578063788e280514610131575b600080fd5b6100a061009b366004610ed3565b6101cb565b60405166ffffffffffffff90911681526020015b60405180910390f35b6100d06100cb366004610f90565b61046f565b6040805166ffffffffffffff909616865293151560208601526001600160a01b0392831693850193909352166060830152608082015260a0016100b4565b61012161011c366004610fc5565b6104cb565b6040516100b4949392919061102d565b61014461013f366004611065565b610588565b6040516100b4919061114b565b61016461015f3660046111ad565b6107ce565b005b610179610174366004610fc5565b6109dd565b6040516100b49190611236565b600354610199906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b60025461019990600160381b90046001600160a01b031681565b6000816102135760405162461bcd60e51b8152602060048201526011602482015270139bc81b1a5b995cc81c1c9bdd9a591959607a1b60448201526064015b60405180910390fd5b60008451116102645760405162461bcd60e51b815260206004820152601760248201527f4e6f206465736372697074696f6e2070726f7669646564000000000000000000604482015260640161020a565b60015460005b838110156103ac576040805160a08101825260025466ffffffffffffff168152600060208201523391810191909152600190606081018787858181106102b2576102b2611249565b6102c89260206040909202019081019150611065565b6001600160a01b031681526020018787858181106102e8576102e8611249565b6040908102929092016020908101359093525083546001808201865560009586529483902084516003909202018054938501519285015166ffffffffffffff90921667ffffffffffffffff1990941693909317600160381b921515929092029190911768010000000000000000600160e01b031916600160401b6001600160a01b0392831602178255606083015193820180546001600160a01b031916949091169390931790925560800151600290910155806103a481611275565b91505061026a565b50604080516080810182526002805466ffffffffffffff908116808452426020808601918252858701888152606087018d8152600094855291849052969092208551815466ffffffffffffff19169416939093178355516001830155935191810191909155915190919060038201906104259082611317565b50506002805466ffffffffffffff1691506000610441836113d7565b91906101000a81548166ffffffffffffff021916908366ffffffffffffff1602179055509150509392505050565b6001818154811061047f57600080fd5b600091825260209091206003909102018054600182015460029092015466ffffffffffffff8216935060ff600160381b830416926001600160a01b03600160401b909304831692169085565b600060208190529081526040902080546001820154600283015460038401805466ffffffffffffff9094169492939192916105059061128e565b80601f01602080910402602001604051908101604052809291908181526020018280546105319061128e565b801561057e5780601f106105535761010080835404028352916020019161057e565b820191906000526020600020905b81548152906001019060200180831161056157829003601f168201915b5050505050905084565b60606000805b60025466ffffffffffffff168110156106615760006105ac826109dd565b9050846001600160a01b031681602001516001600160a01b0316036105de57826105d581611275565b9350505061064f565b60005b81608001515181101561064c57856001600160a01b03168260800151828151811061060e5761060e611249565b6020026020010151600001516001600160a01b03160361063a578361063281611275565b94505061064c565b8061064481611275565b9150506105e1565b50505b8061065981611275565b91505061058e565b508067ffffffffffffffff81111561067b5761067b610e17565b6040519080825280602002602001820160405280156106b457816020015b6106a1610dcf565b8152602001906001900390816106995790505b5091506000805b60025466ffffffffffffff168110156107c65760006106d9826109dd565b9050856001600160a01b031681602001516001600160a01b0316036107275780858461070481611275565b95508151811061071657610716611249565b6020026020010181905250506107b4565b60005b8160800151518110156107b157866001600160a01b03168260800151828151811061075757610757611249565b6020026020010151600001516001600160a01b03160361079f5781868561077d81611275565b96508151811061078f5761078f611249565b60200260200101819052506107b1565b806107a981611275565b91505061072a565b50505b806107be81611275565b9150506106bb565b505050919050565b60006107d9846109dd565b6020810151909150600090815b8360800151518110156108675760008460800151828151811061080b5761080b611249565b60200260200101519050336001600160a01b031681600001516001600160a01b0316146108385750610855565b602081015161084790856113fd565b600160409092019190915292505b8061085f81611275565b9150506107e6565b50600082116108b85760405162461bcd60e51b815260206004820152601860248201527f53706c69747a3a206e6f20616d6f756e7420746f207061790000000000000000604482015260640161020a565b60035484516020860151604080880151905163d505accf60e01b81523360048201523060248201526044810187905260808a0135606482015260ff909316608484015260a483019190915260c48201526001600160a01b039091169063d505accf9060e401600060405180830381600087803b15801561093757600080fd5b505af115801561094b573d6000803e3d6000fd5b50506002546040516323b872dd60e01b81523360048201526001600160a01b03858116602483015260448201879052600160381b90920490911692506323b872dd91506064016020604051808303816000875af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190611416565b50505050505050565b6109e5610dcf565b60025466ffffffffffffff90811690831610610a355760405162461bcd60e51b815260206004820152600f60248201526e1a59081a5cc81b9bdd081d985b1a59608a1b604482015260640161020a565b66ffffffffffffff808316600090815260208181526040808320815160808101835281549095168552600181015492850192909252600282015490840152600381018054929392606084019190610a8b9061128e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab79061128e565b8015610b045780601f10610ad957610100808354040283529160200191610b04565b820191906000526020600020905b815481529060010190602001808311610ae757829003601f168201915b5050505050815250509050600080826040015190505b600154811015610b80578466ffffffffffffff1660018281548110610b4157610b41611249565b600091825260209091206003909102015466ffffffffffffff1603610b6e5781610b6a81611275565b9250505b80610b7881611275565b915050610b1a565b506040518060c00160405280836000015166ffffffffffffff1681526020016001846040015181548110610bb657610bb6611249565b600091825260208083206003909202909101546001600160a01b03600160401b909104168352858101519083015260408201526060018267ffffffffffffffff811115610c0557610c05610e17565b604051908082528060200260200182016040528015610c5057816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610c235790505b508152606084015160209091015260408301519093505b6001548110156107c6578466ffffffffffffff1660018281548110610c8e57610c8e611249565b600091825260209091206003909102015466ffffffffffffff16036107c6576000836040015182610cbf9190611438565b9050604051806060016040528060018481548110610cdf57610cdf611249565b600091825260209182902060016003909202018101546001600160a01b031683528054929091019185908110610d1757610d17611249565b906000526020600020906003020160020154815260200160018481548110610d4157610d41611249565b6000918252602090912060039091020154600160381b900460ff16151590526080860151805183908110610d7757610d77611249565b602002602001018190525060018281548110610d9557610d95611249565b90600052602060002090600302016002015485606001818151610db891906113fd565b905250819050610dc781611275565b915050610c67565b6040518060c00160405280600066ffffffffffffff16815260200160006001600160a01b03168152602001600081526020016000815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610e5057610e50610e17565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e7f57610e7f610e17565b604052919050565b60008083601f840112610e9957600080fd5b50813567ffffffffffffffff811115610eb157600080fd5b6020830191508360208260061b8501011115610ecc57600080fd5b9250929050565b600080600060408486031215610ee857600080fd5b833567ffffffffffffffff80821115610f0057600080fd5b818601915086601f830112610f1457600080fd5b8135602082821115610f2857610f28610e17565b610f3a601f8301601f19168201610e56565b8281528982848701011115610f4e57600080fd5b82828601838301376000928101820192909252909550860135915080821115610f7657600080fd5b50610f8386828701610e87565b9497909650939450505050565b600060208284031215610fa257600080fd5b5035919050565b803566ffffffffffffff81168114610fc057600080fd5b919050565b600060208284031215610fd757600080fd5b610fe082610fa9565b9392505050565b6000815180845260005b8181101561100d57602081850181015186830182015201610ff1565b506000602082860101526020601f19601f83011685010191505092915050565b66ffffffffffffff8516815283602082015282604082015260806060820152600061105b6080830184610fe7565b9695505050505050565b60006020828403121561107757600080fd5b81356001600160a01b0381168114610fe057600080fd5b805166ffffffffffffff1682526020808201516001600160a01b0390811682850152604080840151818601526060808501518187015260808086015160c09188018290528051918801829052600095908101949093929091869060e08a01905b8083101561112357875180518616835287810151888401528601511515868301529686019660019290920191908301906110ee565b5060a0890151965089810360a08b015261113d8188610fe7565b9a9950505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111a057603f1988860301845261118e85835161108e565b94509285019290850190600101611172565b5092979650505050505050565b60008060008385036101208112156111c457600080fd5b6111cd85610fa9565b935060a0601f19820112156111e157600080fd5b602085019250606060bf19820112156111f957600080fd5b50611202610e2d565b60c085013560ff8116811461121657600080fd5b815260e08501356020820152610100909401356040850152509093909250565b602081526000610fe0602083018461108e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112875761128761125f565b5060010190565b600181811c908216806112a257607f821691505b6020821081036112c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561131257600081815260208120601f850160051c810160208610156112ef5750805b601f850160051c820191505b8181101561130e578281556001016112fb565b5050505b505050565b815167ffffffffffffffff81111561133157611331610e17565b6113458161133f845461128e565b846112c8565b602080601f83116001811461137a57600084156113625750858301515b600019600386901b1c1916600185901b17855561130e565b600085815260208120601f198616915b828110156113a95788860151825594840194600190910190840161138a565b50858210156113c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600066ffffffffffffff8083168181036113f3576113f361125f565b6001019392505050565b808201808211156114105761141061125f565b92915050565b60006020828403121561142857600080fd5b81518015158114610fe057600080fd5b818103818111156114105761141061125f56fea26469706673582212207fc80d91187e44f24e3b27ea72f35af7beab7521cb4afcafdfe946720a04eaa064736f6c63430008130033",
    "sourceMap": "221:1333:22:-:0;;;804:17:21;;;-1:-1:-1;;804:17:21;;;550:111:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:5;:22;;-1:-1:-1;;;;;;;;588:22:22;;-1:-1:-1;;;;;588:22:22;;;;;;;;;;620:11;:34;;-1:-1:-1;;;;;;620:34:22;;;;;;221:1333;;14:290:27;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;:::-;221:1333:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "221:1333:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3027:876:21;;;;;;:::i;:::-;;:::i;:::-;;;2406:16:27;2394:29;;;2376:48;;2364:2;2349:18;3027:876:21;;;;;;;;772:26;;;;;;:::i;:::-;;:::i;:::-;;;;2901:16:27;2889:29;;;2871:48;;2962:14;;2955:22;2950:2;2935:18;;2928:50;-1:-1:-1;;;;;3052:15:27;;;3032:18;;;3025:43;;;;3104:15;3099:2;3084:18;;3077:43;3151:3;3136:19;;3129:35;2858:3;2843:19;772:26:21;2620:550:27;722:43:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1901:1120::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;667:885:22:-;;;;;;:::i;:::-;;:::i;:::-;;828:1067:21;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;280:31:22:-;;;;;-1:-1:-1;;;;;280:31:22;;;;;;-1:-1:-1;;;;;8092:32:27;;;8074:51;;8062:2;8047:18;280:31:22;7906:225:27;255:19:22;;;;;-1:-1:-1;;;255:19:22;;-1:-1:-1;;;;;255:19:22;;;3027:876:21;3148:6;3174:16;3166:46;;;;-1:-1:-1;;;3166:46:21;;8562:2:27;3166:46:21;;;8544:21:27;8601:2;8581:18;;;8574:30;-1:-1:-1;;;8620:18:27;;;8613:47;8677:18;;3166:46:21;;;;;;;;;3258:1;3236:11;3230:25;:29;3222:65;;;;-1:-1:-1;;;3222:65:21;;8908:2:27;3222:65:21;;;8890:21:27;8947:2;8927:18;;;8920:30;8986:25;8966:18;;;8959:53;9029:18;;3222:65:21;8706:347:27;3222:65:21;3322:6;:13;3298:21;3346:327;3363:16;;;3346:327;;;3429:219;;;;;;;;3590:6;;;;3429:219;;-1:-1:-1;3429:219:21;;;;3509:10;3429:219;;;;;;;3400:6;;3429:219;;;3468:5;;3474:1;3468:8;;;;;;;:::i;:::-;:13;;;:8;;;;;:13;;;;-1:-1:-1;3468:13:21;:::i;:::-;-1:-1:-1;;;;;3429:219:21;;;;;3549:5;;3555:1;3549:8;;;;;;;:::i;:::-;;;;;;;;;:15;;;;;3429:219;;;-1:-1:-1;3400:262:21;;;;;;;;-1:-1:-1;3400:262:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3400:262:21;;;;;;;-1:-1:-1;;;3400:262:21;;;;;;;;;;;-1:-1:-1;;;;;;3400:262:21;-1:-1:-1;;;;;;;;3400:262:21;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3400:262:21;;;;;;;;;;;;;;;;;;;;3381:3;;;;:::i;:::-;;;;3346:327;;;-1:-1:-1;3701:170:21;;;;;;;;3806:6;;;;;;;3701:170;;;3773:15;3701:170;;;;;;;;;;;;;;;;;;;-1:-1:-1;3682:16:21;;;;;;;;;;;:189;;;;-1:-1:-1;;3682:189:21;;;;;;;;;;-1:-1:-1;3682:189:21;;;;;;;;;;;;;;3701:170;;3682:16;:189;;;;;;;;:::i;:::-;-1:-1:-1;;3888:6:21;:8;;;;;-1:-1:-1;3888:6:21;:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3881:15;;;3027:876;;;;;:::o;772:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;772:26:21;-1:-1:-1;;;772:26:21;;;;-1:-1:-1;;;;;;;;772:26:21;;;;;;;;;:::o;722:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1901:1120::-;1980:25;2017:10;2046:6;2041:425;2062:6;;;;2058:10;;2041:425;;;2089:22;2114:21;2132:1;2114:10;:21::i;:::-;2089:46;;2169:4;-1:-1:-1;;;;;2153:20:21;:7;:12;;;-1:-1:-1;;;;;2153:20:21;;2149:92;;2193:7;;;;:::i;:::-;;;;2218:8;;;2149:92;2259:9;2254:202;2281:7;:13;;;:20;2274:4;:27;2254:202;;;2361:4;-1:-1:-1;;;;;2333:32:21;:7;:13;;;2347:4;2333:19;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;2333:32:21;;2329:113;;2389:7;;;;:::i;:::-;;;;2418:5;;2329:113;2303:6;;;;:::i;:::-;;;;2254:202;;;;2075:391;2041:425;2070:3;;;;:::i;:::-;;;;2041:425;;;;2501:5;2487:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2476:31;;2517:13;2549:6;2544:471;2565:6;;;;2561:10;;2544:471;;;2592:22;2617:21;2635:1;2617:10;:21::i;:::-;2592:46;;2672:4;-1:-1:-1;;;;;2656:20:21;:7;:12;;;-1:-1:-1;;;;;2656:20:21;;2652:115;;2719:7;2696:8;2705:10;;;;:::i;:::-;;;2696:20;;;;;;;;:::i;:::-;;;;;;:30;;;;2744:8;;;2652:115;2785:9;2780:225;2807:7;:13;;;:20;2800:4;:27;2780:225;;;2887:4;-1:-1:-1;;;;;2859:32:21;:7;:13;;;2873:4;2859:19;;;;;;;;:::i;:::-;;;;;;;:24;;;-1:-1:-1;;;;;2859:32:21;;2855:136;;2938:7;2915:8;2924:10;;;;:::i;:::-;;;2915:20;;;;;;;;:::i;:::-;;;;;;:30;;;;2967:5;;2855:136;2829:6;;;;:::i;:::-;;;;2780:225;;;;2578:437;2544:471;2573:3;;;;:::i;:::-;;;;2544:471;;;;2007:1014;;1901:1120;;;:::o;667:885:22:-;797:31;831:30;851:9;831:19;:30::i;:::-;919:12;;;;797:64;;-1:-1:-1;872:14:22;;;942:274;963:7;:13;;;:20;959:1;:24;942:274;;;1004:32;1039:7;:13;;;1053:1;1039:16;;;;;;;;:::i;:::-;;;;;;;1004:51;;1087:10;-1:-1:-1;;;;;1074:23:22;:4;:9;;;-1:-1:-1;;;;;1074:23:22;;1070:70;;1117:8;;;1070:70;1164:11;;;;1154:21;;;;:::i;:::-;1201:4;1189:9;;;;:16;;;;1154:21;-1:-1:-1;942:274:22;985:3;;;;:::i;:::-;;;;942:274;;;;1243:1;1234:6;:10;1226:47;;;;-1:-1:-1;;;1226:47:22;;12595:2:27;1226:47:22;;;12577:21:27;12634:2;12614:18;;;12607:30;12673:26;12653:18;;;12646:54;12717:18;;1226:47:22;12393:348:27;1226:47:22;1284:11;;1416;;1441;;;;1466;;;;;1284:203;;-1:-1:-1;;;1284:203:22;;1316:10;1284:203;;;13095:34:27;1348:4:22;13145:18:27;;;13138:43;13197:18;;;13190:34;;;1387:15:22;;;;13240:18:27;;;13233:34;13316:4;13304:17;;;13283:19;;;13276:46;13338:19;;;13331:35;;;;13382:19;;;13375:35;-1:-1:-1;;;;;1284:11:22;;;;:18;;13029:19:27;;1284:203:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:5:22;;:48;;-1:-1:-1;;;1497:48:22;;1516:10;1497:48;;;13661:34:27;-1:-1:-1;;;;;13731:15:27;;;13711:18;;;13704:43;13763:18;;;13756:34;;;-1:-1:-1;;;1497:5:22;;;;;;;-1:-1:-1;1497:18:22;;-1:-1:-1;13596:18:27;;1497:48:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;787:765;;;667:885;;;:::o;828:1067:21:-;894:22;;:::i;:::-;941:6;;;;;;936:11;;;;928:39;;;;-1:-1:-1;;;928:39:21;;14285:2:27;928:39:21;;;14267:21:27;14324:2;14304:18;;;14297:30;-1:-1:-1;;;14343:18:27;;;14336:45;14398:18;;928:39:21;14083:339:27;928:39:21;1001:12;;;;978:20;1001:12;;;;;;;;;;;978:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:10;1052:6;1061:4;:24;;;1052:33;;1047:152;1091:6;:13;1087:17;;1047:152;;;1145:2;1129:18;;:6;1136:1;1129:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:12;;;:18;1125:64;;1167:7;;;;:::i;:::-;;;;1125:64;1106:3;;;;:::i;:::-;;;;1047:152;;;;1218:251;;;;;;;;1244:4;:7;;;1218:251;;;;;;1271:6;1278:4;:24;;;1271:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;;;;1271:37:21;;;;1218:251;;1376:14;;;;1218:251;;;;;;;;;;1429:5;1411:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1411:24:21;;-1:-1:-1;;1411:24:21;;;;;;;;;;;-1:-1:-1;1218:251:21;;1335:16;;;;1218:251;;;;;-1:-1:-1;1493:24:21;;;1208:261;;-1:-1:-1;1479:410:21;1523:6;:13;1519:17;;1479:410;;;1577:2;1561:18;;:6;1568:1;1561:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:12;;;:18;1581:5;1557:29;1601:13;1621:4;:24;;;1617:1;:28;;;;:::i;:::-;1601:44;;1685:145;;;;;;;;1721:6;1728:1;1721:9;;;;;;;;:::i;:::-;;;;;;;;;;:14;:9;;;;;:14;;;-1:-1:-1;;;;;1721:14:21;1685:145;;1761:9;;1685:145;;;;;1768:1;;1761:9;;;;;;:::i;:::-;;;;;;;;;;;:16;;;1685:145;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:14;-1:-1:-1;;;1801:14:21;;;;1685:145;;;;1659:13;;;;:23;;1673:8;;1659:23;;;;;;:::i;:::-;;;;;;:171;;;;1862:6;1869:1;1862:9;;;;;;;;:::i;:::-;;;;;;;;;;;:16;;;1844:7;:14;;:34;;;;;;;:::i;:::-;;;-1:-1:-1;1538:3:21;;-1:-1:-1;1538:3:21;;;:::i;:::-;;;;1479:410;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:27;505:40;;575:18;560:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:27:o;684:393::-;773:8;783:6;837:3;830:4;822:6;818:17;814:27;804:55;;855:1;852;845:12;804:55;-1:-1:-1;878:20:27;;921:18;910:30;;907:50;;;953:1;950;943:12;907:50;990:4;982:6;978:17;966:29;;1050:3;1043:4;1033:6;1030:1;1026:14;1018:6;1014:27;1010:38;1007:47;1004:67;;;1067:1;1064;1057:12;1004:67;684:393;;;;;:::o;1082:1145::-;1225:6;1233;1241;1294:2;1282:9;1273:7;1269:23;1265:32;1262:52;;;1310:1;1307;1300:12;1262:52;1350:9;1337:23;1379:18;1420:2;1412:6;1409:14;1406:34;;;1436:1;1433;1426:12;1406:34;1474:6;1463:9;1459:22;1449:32;;1519:7;1512:4;1508:2;1504:13;1500:27;1490:55;;1541:1;1538;1531:12;1490:55;1577:2;1564:16;1599:4;1622:2;1618;1615:10;1612:36;;;1628:18;;:::i;:::-;1670:53;1713:2;1694:13;;-1:-1:-1;;1690:27:27;1686:36;;1670:53;:::i;:::-;1746:2;1739:5;1732:17;1786:7;1781:2;1776;1772;1768:11;1764:20;1761:33;1758:53;;;1807:1;1804;1797:12;1758:53;1862:2;1857;1853;1849:11;1844:2;1837:5;1833:14;1820:45;1906:1;1885:14;;;1881:23;;1874:34;;;;1889:5;;-1:-1:-1;1970:18:27;;1957:32;;-1:-1:-1;2001:16:27;;;1998:36;;;2030:1;2027;2020:12;1998:36;;2069:98;2159:7;2148:8;2137:9;2133:24;2069:98;:::i;:::-;1082:1145;;2186:8;;-1:-1:-1;2043:124:27;;-1:-1:-1;;;;1082:1145:27:o;2435:180::-;2494:6;2547:2;2535:9;2526:7;2522:23;2518:32;2515:52;;;2563:1;2560;2553:12;2515:52;-1:-1:-1;2586:23:27;;2435:180;-1:-1:-1;2435:180:27:o;3175:169::-;3242:20;;3302:16;3291:28;;3281:39;;3271:67;;3334:1;3331;3324:12;3271:67;3175:169;;;:::o;3349:184::-;3407:6;3460:2;3448:9;3439:7;3435:23;3431:32;3428:52;;;3476:1;3473;3466:12;3428:52;3499:28;3517:9;3499:28;:::i;:::-;3489:38;3349:184;-1:-1:-1;;;3349:184:27:o;3538:423::-;3580:3;3618:5;3612:12;3645:6;3640:3;3633:19;3670:1;3680:162;3694:6;3691:1;3688:13;3680:162;;;3756:4;3812:13;;;3808:22;;3802:29;3784:11;;;3780:20;;3773:59;3709:12;3680:162;;;3684:3;3887:1;3880:4;3871:6;3866:3;3862:16;3858:27;3851:38;3950:4;3943:2;3939:7;3934:2;3926:6;3922:15;3918:29;3913:3;3909:39;3905:50;3898:57;;;3538:423;;;;:::o;3966:456::-;4209:16;4201:6;4197:29;4186:9;4179:48;4263:6;4258:2;4247:9;4243:18;4236:34;4306:6;4301:2;4290:9;4286:18;4279:34;4349:3;4344:2;4333:9;4329:18;4322:31;4160:4;4370:46;4411:3;4400:9;4396:19;4388:6;4370:46;:::i;:::-;4362:54;3966:456;-1:-1:-1;;;;;;3966:456:27:o;4427:286::-;4486:6;4539:2;4527:9;4518:7;4514:23;4510:32;4507:52;;;4555:1;4552;4545:12;4507:52;4581:23;;-1:-1:-1;;;;;4633:31:27;;4623:42;;4613:70;;4679:1;4676;4669:12;4718:1265;4837:12;;4851:16;4833:35;4821:48;;4888:4;4927:14;;;4921:21;-1:-1:-1;;;;;5010:21:27;;;4996:12;;;4989:43;5051:4;5091:14;;;5085:21;5071:12;;;5064:43;5126:4;5166:14;;;5160:21;5146:12;;;5139:43;5230:4;5219:16;;;5213:23;4807:4;5252:14;;;5245:28;;;5322:21;;4798:14;;;5352:20;;;4768:3;;5426:23;;;;4888:4;;5051;4961:19;;4768:3;;5399;5390:13;;;5477:342;5491:6;5488:1;5485:13;5477:342;;;5550:13;;5594:9;;5590:18;;5576:33;;5651:11;;;5645:18;5629:14;;;5622:42;5720:11;;5714:18;5707:26;5700:34;5684:14;;;5677:58;5794:15;;;;5513:1;5506:9;;;;;5757:14;;;;5477:342;;;5481:3;5867:4;5860:5;5856:16;5850:23;5828:45;;5916:3;5909:5;5905:15;5898:4;5893:3;5889:14;5882:39;5937:40;5971:5;5955:14;5937:40;:::i;:::-;5930:47;4718:1265;-1:-1:-1;;;;;;;;;;4718:1265:27:o;5988:843::-;6182:4;6211:2;6251;6240:9;6236:18;6281:2;6270:9;6263:21;6304:6;6339;6333:13;6370:6;6362;6355:22;6408:2;6397:9;6393:18;6386:25;;6470:2;6460:6;6457:1;6453:14;6442:9;6438:30;6434:39;6420:53;;6508:2;6500:6;6496:15;6529:1;6539:263;6553:6;6550:1;6547:13;6539:263;;;6646:2;6642:7;6630:9;6622:6;6618:22;6614:36;6609:3;6602:49;6674:48;6715:6;6706;6700:13;6674:48;:::i;:::-;6664:58;-1:-1:-1;6780:12:27;;;;6745:15;;;;6575:1;6568:9;6539:263;;;-1:-1:-1;6819:6:27;;5988:843;-1:-1:-1;;;;;;;5988:843:27:o;6836:800::-;6967:6;6975;6983;7027:9;7018:7;7014:23;7057:3;7053:2;7049:12;7046:32;;;7074:1;7071;7064:12;7046:32;7097:28;7115:9;7097:28;:::i;:::-;7087:38;-1:-1:-1;7159:3:27;-1:-1:-1;;7141:16:27;;7137:26;7134:46;;;7176:1;7173;7166:12;7134:46;7214:2;7199:18;;;-1:-1:-1;7252:4:27;-1:-1:-1;;7233:17:27;;7229:28;7226:48;;;7270:1;7267;7260:12;7226:48;;7296:22;;:::i;:::-;7370:3;7359:9;7355:19;7342:33;7419:4;7410:7;7406:18;7397:7;7394:31;7384:59;;7439:1;7436;7429:12;7384:59;7452:22;;7534:3;7519:19;;7506:33;7501:2;7490:14;;7483:57;7600:3;7585:19;;;7572:33;7567:2;7556:14;;7549:57;-1:-1:-1;6836:800:27;;;;-1:-1:-1;6836:800:27:o;7641:260::-;7822:2;7811:9;7804:21;7785:4;7842:53;7891:2;7880:9;7876:18;7868:6;7842:53;:::i;9058:127::-;9119:10;9114:3;9110:20;9107:1;9100:31;9150:4;9147:1;9140:15;9174:4;9171:1;9164:15;9190:127;9251:10;9246:3;9242:20;9239:1;9232:31;9282:4;9279:1;9272:15;9306:4;9303:1;9296:15;9322:135;9361:3;9382:17;;;9379:43;;9402:18;;:::i;:::-;-1:-1:-1;9449:1:27;9438:13;;9322:135::o;9462:380::-;9541:1;9537:12;;;;9584;;;9605:61;;9659:4;9651:6;9647:17;9637:27;;9605:61;9712:2;9704:6;9701:14;9681:18;9678:38;9675:161;;9758:10;9753:3;9749:20;9746:1;9739:31;9793:4;9790:1;9783:15;9821:4;9818:1;9811:15;9675:161;;9462:380;;;:::o;9973:545::-;10075:2;10070:3;10067:11;10064:448;;;10111:1;10136:5;10132:2;10125:17;10181:4;10177:2;10167:19;10251:2;10239:10;10235:19;10232:1;10228:27;10222:4;10218:38;10287:4;10275:10;10272:20;10269:47;;;-1:-1:-1;10310:4:27;10269:47;10365:2;10360:3;10356:12;10353:1;10349:20;10343:4;10339:31;10329:41;;10420:82;10438:2;10431:5;10428:13;10420:82;;;10483:17;;;10464:1;10453:13;10420:82;;;10424:3;;;10064:448;9973:545;;;:::o;10694:1352::-;10820:3;10814:10;10847:18;10839:6;10836:30;10833:56;;;10869:18;;:::i;:::-;10898:97;10988:6;10948:38;10980:4;10974:11;10948:38;:::i;:::-;10942:4;10898:97;:::i;:::-;11050:4;;11114:2;11103:14;;11131:1;11126:663;;;;11833:1;11850:6;11847:89;;;-1:-1:-1;11902:19:27;;;11896:26;11847:89;-1:-1:-1;;10651:1:27;10647:11;;;10643:24;10639:29;10629:40;10675:1;10671:11;;;10626:57;11949:81;;11096:944;;11126:663;9920:1;9913:14;;;9957:4;9944:18;;-1:-1:-1;;11162:20:27;;;11280:236;11294:7;11291:1;11288:14;11280:236;;;11383:19;;;11377:26;11362:42;;11475:27;;;;11443:1;11431:14;;;;11310:19;;11280:236;;;11284:3;11544:6;11535:7;11532:19;11529:201;;;11605:19;;;11599:26;-1:-1:-1;;11688:1:27;11684:14;;;11700:3;11680:24;11676:37;11672:42;11657:58;11642:74;;11529:201;-1:-1:-1;;;;;11776:1:27;11760:14;;;11756:22;11743:36;;-1:-1:-1;10694:1352:27:o;12051:207::-;12089:3;12117:16;12168:2;12161:5;12157:14;12195:2;12186:7;12183:15;12180:41;;12201:18;;:::i;:::-;12250:1;12237:15;;12051:207;-1:-1:-1;;;12051:207:27:o;12263:125::-;12328:9;;;12349:10;;;12346:36;;;12362:18;;:::i;:::-;12263:125;;;;:::o;13801:277::-;13868:6;13921:2;13909:9;13900:7;13896:23;13892:32;13889:52;;;13937:1;13934;13927:12;13889:52;13969:9;13963:16;14022:5;14015:13;14008:21;14001:5;13998:32;13988:60;;14044:1;14041;14034:12;14427:128;14494:9;;;14515:11;;;14512:37;;;14529:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addReceipt(string,(address,uint256)[])": "0a8b2a00",
    "getReceipt(uint56)": "cc937a67",
    "getReceiptsByAddress(address)": "788e2805",
    "ledger(uint256)": "10a7fd7b",
    "metadata(uint56)": "19e2883e",
    "pay(uint56,(address,address,uint256,uint256,uint256),(uint8,bytes32,bytes32))": "ac1c6214",
    "token()": "fc0c546a",
    "tokenPermit()": "d068ce8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Registry.CreateReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"}],\"name\":\"addReceipt\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"\",\"type\":\"uint56\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.ReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Registry.Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getReceiptsByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"internalType\":\"struct Registry.ReceiptLine[]\",\"name\":\"lines\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Registry.Receipt[]\",\"name\":\"receipts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owes\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"\",\"type\":\"uint56\"}],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint56\",\"name\":\"id\",\"type\":\"uint56\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ledgerStartPosition\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint56\",\"name\":\"receiptId\",\"type\":\"uint56\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Splitz.Permit\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Splitz.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPermit\",\"outputs\":[{\"internalType\":\"contract IERC20Permit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Splitz.sol\":\"Splitz\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"src/Registry.sol\":{\"keccak256\":\"0xee37445a83d2545de1b2b81ef05f36de4ef3235051e7e33bee1ac6583c7fd91c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://93a0695beef0fda7f36c5872b151ffb1e81e66332e31888dccd26b4b67efe4f6\",\"dweb:/ipfs/QmdYzeZnXBiXgARToC7EHS2dsquAcVm3pv7c4A8pnKCkN3\"]},\"src/Splitz.sol\":{\"keccak256\":\"0xd9dbb37f804b49df005e953f2f179272083a075136899d92ae97753def1df149\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://155c98fbe25b21fa53f258f39683a79722a9fc221f25cbd92931176f504ea32b\",\"dweb:/ipfs/QmX8aDokjS2fKe9ajRrXC1vymet2C9n5a5LHgKBYawYLNK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "struct Registry.CreateReceiptLine[]",
              "name": "lines",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "owes",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addReceipt",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "",
              "type": "uint56"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceipt",
          "outputs": [
            {
              "internalType": "struct Registry.Receipt",
              "name": "receipt",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint56",
                  "name": "id",
                  "type": "uint56"
                },
                {
                  "internalType": "address",
                  "name": "owed",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Registry.ReceiptLine[]",
                  "name": "lines",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owes",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "paid",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceiptsByAddress",
          "outputs": [
            {
              "internalType": "struct Registry.Receipt[]",
              "name": "receipts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint56",
                  "name": "id",
                  "type": "uint56"
                },
                {
                  "internalType": "address",
                  "name": "owed",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Registry.ReceiptLine[]",
                  "name": "lines",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owes",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "paid",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ledger",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "bool",
              "name": "paid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owes",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "",
              "type": "uint56"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "metadata",
          "outputs": [
            {
              "internalType": "uint56",
              "name": "id",
              "type": "uint56"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ledgerStartPosition",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint56",
              "name": "receiptId",
              "type": "uint56"
            },
            {
              "internalType": "struct Splitz.Permit",
              "name": "permit",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Splitz.Signature",
              "name": "signature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPermit",
          "outputs": [
            {
              "internalType": "contract IERC20Permit",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":permit2/=lib/permit2/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Splitz.sol": "Splitz"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "src/Registry.sol": {
        "keccak256": "0xee37445a83d2545de1b2b81ef05f36de4ef3235051e7e33bee1ac6583c7fd91c",
        "urls": [
          "bzz-raw://93a0695beef0fda7f36c5872b151ffb1e81e66332e31888dccd26b4b67efe4f6",
          "dweb:/ipfs/QmdYzeZnXBiXgARToC7EHS2dsquAcVm3pv7c4A8pnKCkN3"
        ],
        "license": "UNLICENSED"
      },
      "src/Splitz.sol": {
        "keccak256": "0xd9dbb37f804b49df005e953f2f179272083a075136899d92ae97753def1df149",
        "urls": [
          "bzz-raw://155c98fbe25b21fa53f258f39683a79722a9fc221f25cbd92931176f504ea32b",
          "dweb:/ipfs/QmX8aDokjS2fKe9ajRrXC1vymet2C9n5a5LHgKBYawYLNK"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Splitz.sol",
    "id": 29101,
    "exportedSymbols": {
      "IERC20": [
        28469
      ],
      "IERC20Permit": [
        28505
      ],
      "Registry": [
        28940
      ],
      "Splitz": [
        29100
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1516:22",
    "nodes": [
      {
        "id": 28942,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 28943,
        "nodeType": "ImportDirective",
        "src": "65:55:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29101,
        "sourceUnit": 28392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28944,
        "nodeType": "ImportDirective",
        "src": "121:73:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29101,
        "sourceUnit": 28506,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28945,
        "nodeType": "ImportDirective",
        "src": "195:24:22",
        "nodes": [],
        "absolutePath": "src/Registry.sol",
        "file": "./Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29101,
        "sourceUnit": 28941,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29100,
        "nodeType": "ContractDefinition",
        "src": "221:1333:22",
        "nodes": [
          {
            "id": 28950,
            "nodeType": "VariableDeclaration",
            "src": "255:19:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "269:5:22",
            "scope": 29100,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$28469",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28949,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28948,
                "name": "IERC20",
                "nameLocations": [
                  "255:6:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28469,
                "src": "255:6:22"
              },
              "referencedDeclaration": 28469,
              "src": "255:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$28469",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28953,
            "nodeType": "VariableDeclaration",
            "src": "280:31:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "d068ce8a",
            "mutability": "mutable",
            "name": "tokenPermit",
            "nameLocation": "300:11:22",
            "scope": 29100,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Permit_$28505",
              "typeString": "contract IERC20Permit"
            },
            "typeName": {
              "id": 28952,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28951,
                "name": "IERC20Permit",
                "nameLocations": [
                  "280:12:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28505,
                "src": "280:12:22"
              },
              "referencedDeclaration": 28505,
              "src": "280:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                "typeString": "contract IERC20Permit"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28960,
            "nodeType": "StructDefinition",
            "src": "318:79:22",
            "nodes": [],
            "canonicalName": "Splitz.Signature",
            "members": [
              {
                "constant": false,
                "id": 28955,
                "mutability": "mutable",
                "name": "v",
                "nameLocation": "351:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 28960,
                "src": "345:7:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 28954,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "345:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28957,
                "mutability": "mutable",
                "name": "r",
                "nameLocation": "370:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 28960,
                "src": "362:9:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 28956,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "362:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28959,
                "mutability": "mutable",
                "name": "s",
                "nameLocation": "389:1:22",
                "nodeType": "VariableDeclaration",
                "scope": 28960,
                "src": "381:9:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 28958,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "381:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Signature",
            "nameLocation": "325:9:22",
            "scope": 29100,
            "visibility": "public"
          },
          {
            "id": 28971,
            "nodeType": "StructDefinition",
            "src": "403:141:22",
            "nodes": [],
            "canonicalName": "Splitz.Permit",
            "members": [
              {
                "constant": false,
                "id": 28962,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "435:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "427:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28961,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "427:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28964,
                "mutability": "mutable",
                "name": "spender",
                "nameLocation": "458:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "450:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28963,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28966,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "483:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "475:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28965,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28968,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "506:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "498:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28967,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28970,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "529:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 28971,
                "src": "521:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28969,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "521:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Permit",
            "nameLocation": "410:6:22",
            "scope": 29100,
            "visibility": "public"
          },
          {
            "id": 28989,
            "nodeType": "FunctionDefinition",
            "src": "550:111:22",
            "nodes": [],
            "body": {
              "id": 28988,
              "nodeType": "Block",
              "src": "578:83:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28976,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28950,
                      "src": "588:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$28469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28978,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28973,
                          "src": "603:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28977,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28469,
                        "src": "596:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$28469_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 28979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "596:14:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$28469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "588:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$28469",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 28981,
                  "nodeType": "ExpressionStatement",
                  "src": "588:22:22"
                },
                {
                  "expression": {
                    "id": 28986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28982,
                      "name": "tokenPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28953,
                      "src": "620:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                        "typeString": "contract IERC20Permit"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28984,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28973,
                          "src": "647:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28983,
                        "name": "IERC20Permit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28505,
                        "src": "634:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$28505_$",
                          "typeString": "type(contract IERC20Permit)"
                        }
                      },
                      "id": 28985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "634:20:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                        "typeString": "contract IERC20Permit"
                      }
                    },
                    "src": "620:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                      "typeString": "contract IERC20Permit"
                    }
                  },
                  "id": 28987,
                  "nodeType": "ExpressionStatement",
                  "src": "620:34:22"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28973,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "570:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 28989,
                  "src": "562:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:16:22"
            },
            "returnParameters": {
              "id": 28975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:22"
            },
            "scope": 29100,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29099,
            "nodeType": "FunctionDefinition",
            "src": "667:885:22",
            "nodes": [],
            "body": {
              "id": 29098,
              "nodeType": "Block",
              "src": "787:765:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29004,
                      "mutability": "mutable",
                      "name": "receipt",
                      "nameLocation": "821:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 29098,
                      "src": "797:31:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Receipt_$28525_memory_ptr",
                        "typeString": "struct Registry.Receipt"
                      },
                      "typeName": {
                        "id": 29003,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29002,
                          "name": "Registry.Receipt",
                          "nameLocations": [
                            "797:8:22",
                            "806:7:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28525,
                          "src": "797:16:22"
                        },
                        "referencedDeclaration": 28525,
                        "src": "797:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Receipt_$28525_storage_ptr",
                          "typeString": "struct Registry.Receipt"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29009,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29007,
                        "name": "receiptId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28991,
                        "src": "851:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint56",
                          "typeString": "uint56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint56",
                          "typeString": "uint56"
                        }
                      ],
                      "expression": {
                        "id": 29005,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28940,
                        "src": "831:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$28940_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 29006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "840:10:22",
                      "memberName": "getReceipt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28703,
                      "src": "831:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint56_$returns$_t_struct$_Receipt_$28525_memory_ptr_$",
                        "typeString": "function (uint56) view returns (struct Registry.Receipt memory)"
                      }
                    },
                    "id": 29008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Receipt_$28525_memory_ptr",
                      "typeString": "struct Registry.Receipt memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "797:64:22"
                },
                {
                  "assignments": [
                    29011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29011,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "880:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 29098,
                      "src": "872:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "872:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29013,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 29012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "889:1:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:18:22"
                },
                {
                  "assignments": [
                    29015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29015,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "908:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 29098,
                      "src": "900:16:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29014,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "900:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29018,
                  "initialValue": {
                    "expression": {
                      "id": 29016,
                      "name": "receipt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29004,
                      "src": "919:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Receipt_$28525_memory_ptr",
                        "typeString": "struct Registry.Receipt memory"
                      }
                    },
                    "id": 29017,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "927:4:22",
                    "memberName": "owed",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28514,
                    "src": "919:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "900:31:22"
                },
                {
                  "body": {
                    "id": 29060,
                    "nodeType": "Block",
                    "src": "990:226:22",
                    "statements": [
                      {
                        "assignments": [
                          29035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29035,
                            "mutability": "mutable",
                            "name": "line",
                            "nameLocation": "1032:4:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 29060,
                            "src": "1004:32:22",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReceiptLine_$28532_memory_ptr",
                              "typeString": "struct Registry.ReceiptLine"
                            },
                            "typeName": {
                              "id": 29034,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 29033,
                                "name": "Registry.ReceiptLine",
                                "nameLocations": [
                                  "1004:8:22",
                                  "1013:11:22"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 28532,
                                "src": "1004:20:22"
                              },
                              "referencedDeclaration": 28532,
                              "src": "1004:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptLine_$28532_storage_ptr",
                                "typeString": "struct Registry.ReceiptLine"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29040,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 29036,
                              "name": "receipt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29004,
                              "src": "1039:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Receipt_$28525_memory_ptr",
                                "typeString": "struct Registry.Receipt memory"
                              }
                            },
                            "id": 29037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1047:5:22",
                            "memberName": "lines",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28522,
                            "src": "1039:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ReceiptLine_$28532_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Registry.ReceiptLine memory[] memory"
                            }
                          },
                          "id": 29039,
                          "indexExpression": {
                            "id": 29038,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29020,
                            "src": "1053:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1039:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ReceiptLine_$28532_memory_ptr",
                            "typeString": "struct Registry.ReceiptLine memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1004:51:22"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 29045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 29041,
                              "name": "line",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29035,
                              "src": "1074:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptLine_$28532_memory_ptr",
                                "typeString": "struct Registry.ReceiptLine memory"
                              }
                            },
                            "id": 29042,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1079:4:22",
                            "memberName": "owes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28527,
                            "src": "1074:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 29043,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1087:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1091:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1087:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1074:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29048,
                        "nodeType": "IfStatement",
                        "src": "1070:70:22",
                        "trueBody": {
                          "id": 29047,
                          "nodeType": "Block",
                          "src": "1099:41:22",
                          "statements": [
                            {
                              "id": 29046,
                              "nodeType": "Continue",
                              "src": "1117:8:22"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 29052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29049,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29011,
                            "src": "1154:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 29050,
                              "name": "line",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29035,
                              "src": "1164:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptLine_$28532_memory_ptr",
                                "typeString": "struct Registry.ReceiptLine memory"
                              }
                            },
                            "id": 29051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1169:6:22",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28529,
                            "src": "1164:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1154:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29053,
                        "nodeType": "ExpressionStatement",
                        "src": "1154:21:22"
                      },
                      {
                        "expression": {
                          "id": 29058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 29054,
                              "name": "line",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29035,
                              "src": "1189:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ReceiptLine_$28532_memory_ptr",
                                "typeString": "struct Registry.ReceiptLine memory"
                              }
                            },
                            "id": 29056,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1194:4:22",
                            "memberName": "paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28531,
                            "src": "1189:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 29057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1201:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1189:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29059,
                        "nodeType": "ExpressionStatement",
                        "src": "1189:16:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29023,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29020,
                      "src": "959:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 29024,
                          "name": "receipt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29004,
                          "src": "963:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Receipt_$28525_memory_ptr",
                            "typeString": "struct Registry.Receipt memory"
                          }
                        },
                        "id": 29025,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "971:5:22",
                        "memberName": "lines",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28522,
                        "src": "963:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ReceiptLine_$28532_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Registry.ReceiptLine memory[] memory"
                        }
                      },
                      "id": 29026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "977:6:22",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "963:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "959:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29061,
                  "initializationExpression": {
                    "assignments": [
                      29020
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29020,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "952:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 29061,
                        "src": "947:6:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29019,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29022,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "956:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "947:10:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 29029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "985:3:22",
                      "subExpression": {
                        "id": 29028,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29020,
                        "src": "985:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 29030,
                    "nodeType": "ExpressionStatement",
                    "src": "985:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "942:274:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29063,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29011,
                          "src": "1234:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1243:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1234:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53706c69747a3a206e6f20616d6f756e7420746f20706179",
                        "id": 29066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ca7833178f839923af7cf70f6d70fed3e0b6ce861bf7294255d20966e9fdf78",
                          "typeString": "literal_string \"Splitz: no amount to pay\""
                        },
                        "value": "Splitz: no amount to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ca7833178f839923af7cf70f6d70fed3e0b6ce861bf7294255d20966e9fdf78",
                          "typeString": "literal_string \"Splitz: no amount to pay\""
                        }
                      ],
                      "id": 29062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1226:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29068,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:47:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1316:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1320:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1316:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29076,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1348:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Splitz_$29100",
                              "typeString": "contract Splitz"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Splitz_$29100",
                              "typeString": "contract Splitz"
                            }
                          ],
                          "id": 29075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1340:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1340:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1340:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29078,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29011,
                        "src": "1367:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29079,
                          "name": "permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28994,
                          "src": "1387:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit_$28971_calldata_ptr",
                            "typeString": "struct Splitz.Permit calldata"
                          }
                        },
                        "id": 29080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1394:8:22",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28970,
                        "src": "1387:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 29081,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28997,
                          "src": "1416:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$28960_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29082,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1426:1:22",
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28955,
                        "src": "1416:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 29083,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28997,
                          "src": "1441:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$28960_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29084,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1451:1:22",
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28957,
                        "src": "1441:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 29085,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28997,
                          "src": "1466:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Signature_$28960_memory_ptr",
                            "typeString": "struct Splitz.Signature memory"
                          }
                        },
                        "id": 29086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1476:1:22",
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28959,
                        "src": "1466:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 29069,
                        "name": "tokenPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28953,
                        "src": "1284:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$28505",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 29071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1296:6:22",
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28490,
                      "src": "1284:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 29087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:203:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29088,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:203:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29092,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1516:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1520:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1516:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29094,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29015,
                        "src": "1528:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29095,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29011,
                        "src": "1538:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29089,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28950,
                        "src": "1497:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 29091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1503:12:22",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28468,
                      "src": "1497:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29097,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:48:22"
                }
              ]
            },
            "functionSelector": "ac1c6214",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "676:3:22",
            "parameters": {
              "id": 28998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28991,
                  "mutability": "mutable",
                  "name": "receiptId",
                  "nameLocation": "696:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29099,
                  "src": "689:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint56",
                    "typeString": "uint56"
                  },
                  "typeName": {
                    "id": 28990,
                    "name": "uint56",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint56",
                      "typeString": "uint56"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28994,
                  "mutability": "mutable",
                  "name": "permit",
                  "nameLocation": "731:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29099,
                  "src": "715:22:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit_$28971_calldata_ptr",
                    "typeString": "struct Splitz.Permit"
                  },
                  "typeName": {
                    "id": 28993,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28992,
                      "name": "Permit",
                      "nameLocations": [
                        "715:6:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28971,
                      "src": "715:6:22"
                    },
                    "referencedDeclaration": 28971,
                    "src": "715:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit_$28971_storage_ptr",
                      "typeString": "struct Splitz.Permit"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28997,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "764:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 29099,
                  "src": "747:26:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Signature_$28960_memory_ptr",
                    "typeString": "struct Splitz.Signature"
                  },
                  "typeName": {
                    "id": 28996,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28995,
                      "name": "Signature",
                      "nameLocations": [
                        "747:9:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28960,
                      "src": "747:9:22"
                    },
                    "referencedDeclaration": 28960,
                    "src": "747:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Signature_$28960_storage_ptr",
                      "typeString": "struct Splitz.Signature"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:100:22"
            },
            "returnParameters": {
              "id": 28999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:0:22"
            },
            "scope": 29100,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28946,
              "name": "Registry",
              "nameLocations": [
                "240:8:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28940,
              "src": "240:8:22"
            },
            "id": 28947,
            "nodeType": "InheritanceSpecifier",
            "src": "240:8:22"
          }
        ],
        "canonicalName": "Splitz",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29100,
          28940
        ],
        "name": "Splitz",
        "nameLocation": "230:6:22",
        "scope": 29101,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}